/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../ccjs/js/underscore.js":
/*!********************************!*\
  !*** ../ccjs/js/underscore.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n    // Baseline setup\n    // --------------\n\n    // Establish the root object, `window` (`self`) in the browser, `global`\n    // on the server, or `this` in some virtual machines. We use `self`\n    // instead of `window` for `WebWorker` support.\n    var root = typeof self == 'object' && self.self === self && self ||\n        typeof global == 'object' && global.global === global && global ||\n        this;\n\n    // Save the previous value of the `_` variable.\n    var previousUnderscore = root._;\n\n    // Save bytes in the minified (but not gzipped) version:\n    var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n    // Create quick reference variables for speed access to core prototypes.\n    var push = ArrayProto.push,\n        slice = ArrayProto.slice,\n        toString = ObjProto.toString,\n        hasOwnProperty = ObjProto.hasOwnProperty;\n\n    // All **ECMAScript 5** native function implementations that we hope to use\n    // are declared here.\n    var nativeIsArray = Array.isArray,\n        nativeKeys = Object.keys,\n        nativeCreate = Object.create;\n\n    // Naked function reference for surrogate-prototype-swapping.\n    var Ctor = function(){};\n\n    // Create a safe reference to the Underscore object for use below.\n    var _ = function(obj) {\n        if (obj instanceof _) return obj;\n        if (!(this instanceof _)) return new _(obj);\n        this._wrapped = obj;\n    };\n\n    // Export the Underscore object for **Node.js**, with\n    // backwards-compatibility for their old module API. If we're in\n    // the browser, add `_` as a global object.\n    // (`nodeType` is checked to ensure that `module`\n    // and `exports` are not HTML elements.)\n    if (typeof exports != 'undefined' && !exports.nodeType) {\n        if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n            exports = module.exports = _;\n        }\n        exports._ = _;\n    } else {\n        root._ = _;\n    }\n\n    // Current version.\n    _.VERSION = '1.8.3';\n\n    // Internal function that returns an efficient (for current engines) version\n    // of the passed-in callback, to be repeatedly applied in other Underscore\n    // functions.\n    var optimizeCb = function(func, context, argCount) {\n        if (context === void 0) return func;\n        switch (argCount) {\n            case 1: return function(value) {\n                return func.call(context, value);\n            };\n            // The 2-parameter case has been omitted only because no current consumers\n            // made use of it.\n            case null:\n            case 3: return function(value, index, collection) {\n                return func.call(context, value, index, collection);\n            };\n            case 4: return function(accumulator, value, index, collection) {\n                return func.call(context, accumulator, value, index, collection);\n            };\n        }\n        return function() {\n            return func.apply(context, arguments);\n        };\n    };\n\n    var builtinIteratee;\n\n    // An internal function to generate callbacks that can be applied to each\n    // element in a collection, returning the desired result — either `identity`,\n    // an arbitrary callback, a property matcher, or a property accessor.\n    var cb = function(value, context, argCount) {\n        if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n        if (value == null) return _.identity;\n        if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n        if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n        return _.property(value);\n    };\n\n    // External wrapper for our callback generator. Users may customize\n    // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n    // This abstraction hides the internal-only argCount argument.\n    _.iteratee = builtinIteratee = function(value, context) {\n        return cb(value, context, Infinity);\n    };\n\n    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)\n    // This accumulates the arguments passed into an type, after a given index.\n    var restArgs = function(func, startIndex) {\n        startIndex = startIndex == null ? func.length - 1 : +startIndex;\n        return function() {\n            var length = Math.max(arguments.length - startIndex, 0),\n                rest = Array(length),\n                index = 0;\n            for (; index < length; index++) {\n                rest[index] = arguments[index + startIndex];\n            }\n            switch (startIndex) {\n                case 0: return func.call(this, rest);\n                case 1: return func.call(this, arguments[0], rest);\n                case 2: return func.call(this, arguments[0], arguments[1], rest);\n            }\n            var args = Array(startIndex + 1);\n            for (index = 0; index < startIndex; index++) {\n                args[index] = arguments[index];\n            }\n            args[startIndex] = rest;\n            return func.apply(this, args);\n        };\n    };\n\n    // An internal function for creating a new object that inherits from another.\n    var baseCreate = function(prototype) {\n        if (!_.isObject(prototype)) return {};\n        if (nativeCreate) return nativeCreate(prototype);\n        Ctor.prototype = prototype;\n        var result = new Ctor;\n        Ctor.prototype = null;\n        return result;\n    };\n\n    var shallowProperty = function(key) {\n        return function(obj) {\n            return obj == null ? void 0 : obj[key];\n        };\n    };\n\n    var deepGet = function(obj, path) {\n        var length = path.length;\n        for (var i = 0; i < length; i++) {\n            if (obj == null) return void 0;\n            obj = obj[path[i]];\n        }\n        return length ? obj : void 0;\n    };\n\n    // Helper for collection methods to determine whether a collection\n    // should be iterated as an type or as an object.\n    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n    var getLength = shallowProperty('length');\n    var isArrayLike = function(collection) {\n        var length = getLength(collection);\n        return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n    };\n\n    // Collection Functions\n    // --------------------\n\n    // The cornerstone, an `each` implementation, aka `forEach`.\n    // Handles raw objects in addition to type-likes. Treats all\n    // sparse type-likes as if they were dense.\n    _.each = _.forEach = function(obj, iteratee, context) {\n        iteratee = optimizeCb(iteratee, context);\n        var i, length;\n        if (isArrayLike(obj)) {\n            for (i = 0, length = obj.length; i < length; i++) {\n                iteratee(obj[i], i, obj);\n            }\n        } else {\n            var keys = _.keys(obj);\n            for (i = 0, length = keys.length; i < length; i++) {\n                iteratee(obj[keys[i]], keys[i], obj);\n            }\n        }\n        return obj;\n    };\n\n    // Return the results of applying the iteratee to each element.\n    _.map = _.collect = function(obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length,\n            results = Array(length);\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            results[index] = iteratee(obj[currentKey], currentKey, obj);\n        }\n        return results;\n    };\n\n    // Create a reducing function iterating left or right.\n    var createReduce = function(dir) {\n        // Wrap code that reassigns argument variables in a separate function than\n        // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n        var reducer = function(obj, iteratee, memo, initial) {\n            var keys = !isArrayLike(obj) && _.keys(obj),\n                length = (keys || obj).length,\n                index = dir > 0 ? 0 : length - 1;\n            if (!initial) {\n                memo = obj[keys ? keys[index] : index];\n                index += dir;\n            }\n            for (; index >= 0 && index < length; index += dir) {\n                var currentKey = keys ? keys[index] : index;\n                memo = iteratee(memo, obj[currentKey], currentKey, obj);\n            }\n            return memo;\n        };\n\n        return function(obj, iteratee, memo, context) {\n            var initial = arguments.length >= 3;\n            return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n        };\n    };\n\n    // **Reduce** builds up a single result from a list of values, aka `inject`,\n    // or `foldl`.\n    _.reduce = _.foldl = _.inject = createReduce(1);\n\n    // The right-associative version of reduce, also known as `foldr`.\n    _.reduceRight = _.foldr = createReduce(-1);\n\n    // Return the first value which passes a truth test. Aliased as `detect`.\n    _.find = _.detect = function(obj, predicate, context) {\n        var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n        var key = keyFinder(obj, predicate, context);\n        if (key !== void 0 && key !== -1) return obj[key];\n    };\n\n    // Return all the elements that pass a truth test.\n    // Aliased as `select`.\n    _.filter = _.select = function(obj, predicate, context) {\n        var results = [];\n        predicate = cb(predicate, context);\n        _.each(obj, function(value, index, list) {\n            if (predicate(value, index, list)) results.push(value);\n        });\n        return results;\n    };\n\n    // Return all the elements for which a truth test fails.\n    _.reject = function(obj, predicate, context) {\n        return _.filter(obj, _.negate(cb(predicate)), context);\n    };\n\n    // Determine whether all of the elements match a truth test.\n    // Aliased as `all`.\n    _.every = _.all = function(obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length;\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            if (!predicate(obj[currentKey], currentKey, obj)) return false;\n        }\n        return true;\n    };\n\n    // Determine if at least one element in the object matches a truth test.\n    // Aliased as `any`.\n    _.some = _.any = function(obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length;\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            if (predicate(obj[currentKey], currentKey, obj)) return true;\n        }\n        return false;\n    };\n\n    // Determine if the type or object contains a given item (using `===`).\n    // Aliased as `includes` and `include`.\n    _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n        if (!isArrayLike(obj)) obj = _.values(obj);\n        if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n        return _.indexOf(obj, item, fromIndex) >= 0;\n    };\n\n    // Invoke a method (with arguments) on every item in a collection.\n    _.invoke = restArgs(function(obj, path, args) {\n        var contextPath, func;\n        if (_.isFunction(path)) {\n            func = path;\n        } else if (_.isArray(path)) {\n            contextPath = path.slice(0, -1);\n            path = path[path.length - 1];\n        }\n        return _.map(obj, function(context) {\n            var method = func;\n            if (!method) {\n                if (contextPath && contextPath.length) {\n                    context = deepGet(context, contextPath);\n                }\n                if (context == null) return void 0;\n                method = context[path];\n            }\n            return method == null ? method : method.apply(context, args);\n        });\n    });\n\n    // Convenience version of a common use case of `map`: fetching a property.\n    _.pluck = function(obj, key) {\n        return _.map(obj, _.property(key));\n    };\n\n    // Convenience version of a common use case of `filter`: selecting only objects\n    // containing specific `key:value` pairs.\n    _.where = function(obj, attrs) {\n        return _.filter(obj, _.matcher(attrs));\n    };\n\n    // Convenience version of a common use case of `find`: getting the first object\n    // containing specific `key:value` pairs.\n    _.findWhere = function(obj, attrs) {\n        return _.find(obj, _.matcher(attrs));\n    };\n\n    // Return the maximum element (or element-based computation).\n    _.max = function(obj, iteratee, context) {\n        var result = -Infinity, lastComputed = -Infinity,\n            value, computed;\n        if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object') && obj != null) {\n            obj = isArrayLike(obj) ? obj : _.values(obj);\n            for (var i = 0, length = obj.length; i < length; i++) {\n                value = obj[i];\n                if (value != null && value > result) {\n                    result = value;\n                }\n            }\n        } else {\n            iteratee = cb(iteratee, context);\n            _.each(obj, function(v, index, list) {\n                computed = iteratee(v, index, list);\n                if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n                    result = v;\n                    lastComputed = computed;\n                }\n            });\n        }\n        return result;\n    };\n\n    // Return the minimum element (or element-based computation).\n    _.min = function(obj, iteratee, context) {\n        var result = Infinity, lastComputed = Infinity,\n            value, computed;\n        if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object') && obj != null) {\n            obj = isArrayLike(obj) ? obj : _.values(obj);\n            for (var i = 0, length = obj.length; i < length; i++) {\n                value = obj[i];\n                if (value != null && value < result) {\n                    result = value;\n                }\n            }\n        } else {\n            iteratee = cb(iteratee, context);\n            _.each(obj, function(v, index, list) {\n                computed = iteratee(v, index, list);\n                if (computed < lastComputed || computed === Infinity && result === Infinity) {\n                    result = v;\n                    lastComputed = computed;\n                }\n            });\n        }\n        return result;\n    };\n\n    // Shuffle a collection.\n    _.shuffle = function(obj) {\n        return _.sample(obj, Infinity);\n    };\n\n    // Sample **n** random values from a collection using the modern version of the\n    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n    // If **n** is not specified, returns a single random element.\n    // The internal `guard` argument allows it to work with `map`.\n    _.sample = function(obj, n, guard) {\n        if (n == null || guard) {\n            if (!isArrayLike(obj)) obj = _.values(obj);\n            return obj[_.random(obj.length - 1)];\n        }\n        var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n        var length = getLength(sample);\n        n = Math.max(Math.min(n, length), 0);\n        var last = length - 1;\n        for (var index = 0; index < n; index++) {\n            var rand = _.random(index, last);\n            var temp = sample[index];\n            sample[index] = sample[rand];\n            sample[rand] = temp;\n        }\n        return sample.slice(0, n);\n    };\n\n    // Sort the object's values by a criterion produced by an iteratee.\n    _.sortBy = function(obj, iteratee, context) {\n        var index = 0;\n        iteratee = cb(iteratee, context);\n        return _.pluck(_.map(obj, function(value, key, list) {\n            return {\n                value: value,\n                index: index++,\n                criteria: iteratee(value, key, list)\n            };\n        }).sort(function(left, right) {\n            var a = left.criteria;\n            var b = right.criteria;\n            if (a !== b) {\n                if (a > b || a === void 0) return 1;\n                if (a < b || b === void 0) return -1;\n            }\n            return left.index - right.index;\n        }), 'value');\n    };\n\n    // An internal function used for aggregate \"group by\" operations.\n    var group = function(behavior, partition) {\n        return function(obj, iteratee, context) {\n            var result = partition ? [[], []] : {};\n            iteratee = cb(iteratee, context);\n            _.each(obj, function(value, index) {\n                var key = iteratee(value, index, obj);\n                behavior(result, value, key);\n            });\n            return result;\n        };\n    };\n\n    // Groups the object's values by a criterion. Pass either a string attribute\n    // to group by, or a function that returns the criterion.\n    _.groupBy = group(function(result, value, key) {\n        if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n    });\n\n    // Indexes the object's values by a criterion, similar to `groupBy`, but for\n    // when you know that your index values will be unique.\n    _.indexBy = group(function(result, value, key) {\n        result[key] = value;\n    });\n\n    // Counts instances of an object that group by a certain criterion. Pass\n    // either a string attribute to count by, or a function that returns the\n    // criterion.\n    _.countBy = group(function(result, value, key) {\n        if (_.has(result, key)) result[key]++; else result[key] = 1;\n    });\n\n    var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n    // Safely create a real, live type from anything iterable.\n    _.toArray = function(obj) {\n        if (!obj) return [];\n        if (_.isArray(obj)) return slice.call(obj);\n        if (_.isString(obj)) {\n            // Keep surrogate pair characters together\n            return obj.match(reStrSymbol);\n        }\n        if (isArrayLike(obj)) return _.map(obj, _.identity);\n        return _.values(obj);\n    };\n\n    // Return the number of elements in an object.\n    _.size = function(obj) {\n        if (obj == null) return 0;\n        return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n    };\n\n    // Split a collection into two arrays: one whose elements all satisfy the given\n    // predicate, and one whose elements all do not satisfy the predicate.\n    _.partition = group(function(result, value, pass) {\n        result[pass ? 0 : 1].push(value);\n    }, true);\n\n    // Array Functions\n    // ---------------\n\n    // Get the first element of an type. Passing **n** will return the first N\n    // values in the type. Aliased as `head` and `take`. The **guard** check\n    // allows it to work with `_.map`.\n    _.first = _.head = _.take = function(array, n, guard) {\n        if (array == null || array.length < 1) return void 0;\n        if (n == null || guard) return array[0];\n        return _.initial(array, array.length - n);\n    };\n\n    // Returns everything but the last entry of the type. Especially useful on\n    // the arguments object. Passing **n** will return all the values in\n    // the type, excluding the last N.\n    _.initial = function(array, n, guard) {\n        return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n    };\n\n    // Get the last element of an type. Passing **n** will return the last N\n    // values in the type.\n    _.last = function(array, n, guard) {\n        if (array == null || array.length < 1) return void 0;\n        if (n == null || guard) return array[array.length - 1];\n        return _.rest(array, Math.max(0, array.length - n));\n    };\n\n    // Returns everything but the first entry of the type. Aliased as `tail` and `drop`.\n    // Especially useful on the arguments object. Passing an **n** will return\n    // the rest N values in the type.\n    _.rest = _.tail = _.drop = function(array, n, guard) {\n        return slice.call(array, n == null || guard ? 1 : n);\n    };\n\n    // Trim out all falsy values from an type.\n    _.compact = function(array) {\n        return _.filter(array, Boolean);\n    };\n\n    // Internal implementation of a recursive `flatten` function.\n    var flatten = function(input, shallow, strict, output) {\n        output = output || [];\n        var idx = output.length;\n        for (var i = 0, length = getLength(input); i < length; i++) {\n            var value = input[i];\n            if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n                // Flatten current level of type or arguments object.\n                if (shallow) {\n                    var j = 0, len = value.length;\n                    while (j < len) output[idx++] = value[j++];\n                } else {\n                    flatten(value, shallow, strict, output);\n                    idx = output.length;\n                }\n            } else if (!strict) {\n                output[idx++] = value;\n            }\n        }\n        return output;\n    };\n\n    // Flatten out an type, either recursively (by default), or just one level.\n    _.flatten = function(array, shallow) {\n        return flatten(array, shallow, false);\n    };\n\n    // Return a version of the type that does not contain the specified value(s).\n    _.without = restArgs(function(array, otherArrays) {\n        return _.difference(array, otherArrays);\n    });\n\n    // Produce a duplicate-free version of the type. If the type has already\n    // been sorted, you have the option of using a faster algorithm.\n    // Aliased as `unique`.\n    _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n        if (!_.isBoolean(isSorted)) {\n            context = iteratee;\n            iteratee = isSorted;\n            isSorted = false;\n        }\n        if (iteratee != null) iteratee = cb(iteratee, context);\n        var result = [];\n        var seen = [];\n        for (var i = 0, length = getLength(array); i < length; i++) {\n            var value = array[i],\n                computed = iteratee ? iteratee(value, i, array) : value;\n            if (isSorted) {\n                if (!i || seen !== computed) result.push(value);\n                seen = computed;\n            } else if (iteratee) {\n                if (!_.contains(seen, computed)) {\n                    seen.push(computed);\n                    result.push(value);\n                }\n            } else if (!_.contains(result, value)) {\n                result.push(value);\n            }\n        }\n        return result;\n    };\n\n    // Produce an type that contains the union: each distinct element from all of\n    // the passed-in arrays.\n    _.union = restArgs(function(arrays) {\n        return _.uniq(flatten(arrays, true, true));\n    });\n\n    // Produce an type that contains every item shared between all the\n    // passed-in arrays.\n    _.intersection = function(array) {\n        var result = [];\n        var argsLength = arguments.length;\n        for (var i = 0, length = getLength(array); i < length; i++) {\n            var item = array[i];\n            if (_.contains(result, item)) continue;\n            var j;\n            for (j = 1; j < argsLength; j++) {\n                if (!_.contains(arguments[j], item)) break;\n            }\n            if (j === argsLength) result.push(item);\n        }\n        return result;\n    };\n\n    // Take the difference between one type and a number of other arrays.\n    // Only the elements present in just the first type will remain.\n    _.difference = restArgs(function(array, rest) {\n        rest = flatten(rest, true, true);\n        return _.filter(array, function(value){\n            return !_.contains(rest, value);\n        });\n    });\n\n    // Complement of _.zip. Unzip accepts an type of arrays and groups\n    // each type's elements on shared indices.\n    _.unzip = function(array) {\n        var length = array && _.max(array, getLength).length || 0;\n        var result = Array(length);\n\n        for (var index = 0; index < length; index++) {\n            result[index] = _.pluck(array, index);\n        }\n        return result;\n    };\n\n    // Zip together multiple lists into a single type -- elements that share\n    // an index go together.\n    _.zip = restArgs(_.unzip);\n\n    // Converts lists into objects. Pass either a single type of `[key, value]`\n    // pairs, or two parallel arrays of the same length -- one of keys, and one of\n    // the corresponding values. Passing by pairs is the reverse of _.pairs.\n    _.object = function(list, values) {\n        var result = {};\n        for (var i = 0, length = getLength(list); i < length; i++) {\n            if (values) {\n                result[list[i]] = values[i];\n            } else {\n                result[list[i][0]] = list[i][1];\n            }\n        }\n        return result;\n    };\n\n    // Generator function to create the findIndex and findLastIndex functions.\n    var createPredicateIndexFinder = function(dir) {\n        return function(array, predicate, context) {\n            predicate = cb(predicate, context);\n            var length = getLength(array);\n            var index = dir > 0 ? 0 : length - 1;\n            for (; index >= 0 && index < length; index += dir) {\n                if (predicate(array[index], index, array)) return index;\n            }\n            return -1;\n        };\n    };\n\n    // Returns the first index on an type-like that passes a predicate test.\n    _.findIndex = createPredicateIndexFinder(1);\n    _.findLastIndex = createPredicateIndexFinder(-1);\n\n    // Use a comparator function to figure out the smallest index at which\n    // an object should be inserted so as to maintain order. Uses binary search.\n    _.sortedIndex = function(array, obj, iteratee, context) {\n        iteratee = cb(iteratee, context, 1);\n        var value = iteratee(obj);\n        var low = 0, high = getLength(array);\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n        }\n        return low;\n    };\n\n    // Generator function to create the indexOf and lastIndexOf functions.\n    var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n        return function(array, item, idx) {\n            var i = 0, length = getLength(array);\n            if (typeof idx == 'number') {\n                if (dir > 0) {\n                    i = idx >= 0 ? idx : Math.max(idx + length, i);\n                } else {\n                    length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n                }\n            } else if (sortedIndex && idx && length) {\n                idx = sortedIndex(array, item);\n                return array[idx] === item ? idx : -1;\n            }\n            if (item !== item) {\n                idx = predicateFind(slice.call(array, i, length), _.isNaN);\n                return idx >= 0 ? idx + i : -1;\n            }\n            for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n                if (array[idx] === item) return idx;\n            }\n            return -1;\n        };\n    };\n\n    // Return the position of the first occurrence of an item in an type,\n    // or -1 if the item is not included in the type.\n    // If the type is large and already in sort order, pass `true`\n    // for **isSorted** to use binary search.\n    _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n    _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n    // Generate an integer Array containing an arithmetic progression. A port of\n    // the native Python `range()` function. See\n    // [the Python documentation](http://docs.python.org/library/functions.html#range).\n    _.range = function(start, stop, step) {\n        if (stop == null) {\n            stop = start || 0;\n            start = 0;\n        }\n        if (!step) {\n            step = stop < start ? -1 : 1;\n        }\n\n        var length = Math.max(Math.ceil((stop - start) / step), 0);\n        var range = Array(length);\n\n        for (var idx = 0; idx < length; idx++, start += step) {\n            range[idx] = start;\n        }\n\n        return range;\n    };\n\n    // Split an **type** into several arrays containing **count** or less elements\n    // of initial type.\n    _.chunk = function(array, count) {\n        if (count == null || count < 1) return [];\n\n        var result = [];\n        var i = 0, length = array.length;\n        while (i < length) {\n            result.push(slice.call(array, i, i += count));\n        }\n        return result;\n    };\n\n    // Function (ahem) Functions\n    // ------------------\n\n    // Determines whether to execute a function as a constructor\n    // or a normal function with the provided arguments.\n    var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n        if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n        var self = baseCreate(sourceFunc.prototype);\n        var result = sourceFunc.apply(self, args);\n        if (_.isObject(result)) return result;\n        return self;\n    };\n\n    // Create a function bound to a given object (assigning `this`, and arguments,\n    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n    // available.\n    _.bind = restArgs(function(func, context, args) {\n        if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n        var bound = restArgs(function(callArgs) {\n            return executeBound(func, bound, context, this, args.concat(callArgs));\n        });\n        return bound;\n    });\n\n    // Partially apply a function by creating a version that has had some of its\n    // arguments pre-filled, without changing its dynamic `this` context. _ acts\n    // as a placeholder by default, allowing any combination of arguments to be\n    // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n    _.partial = restArgs(function(func, boundArgs) {\n        var placeholder = _.partial.placeholder;\n        var bound = function() {\n            var position = 0, length = boundArgs.length;\n            var args = Array(length);\n            for (var i = 0; i < length; i++) {\n                args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n            }\n            while (position < arguments.length) args.push(arguments[position++]);\n            return executeBound(func, bound, this, this, args);\n        };\n        return bound;\n    });\n\n    _.partial.placeholder = _;\n\n    // Bind a number of an object's methods to that object. Remaining arguments\n    // are the method names to be bound. Useful for ensuring that all callbacks\n    // defined on an object belong to it.\n    _.bindAll = restArgs(function(obj, keys) {\n        keys = flatten(keys, false, false);\n        var index = keys.length;\n        if (index < 1) throw new Error('bindAll must be passed function names');\n        while (index--) {\n            var key = keys[index];\n            obj[key] = _.bind(obj[key], obj);\n        }\n    });\n\n    // Memoize an expensive function by storing its results.\n    _.memoize = function(func, hasher) {\n        var memoize = function(key) {\n            var cache = memoize.cache;\n            var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n            if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n            return cache[address];\n        };\n        memoize.cache = {};\n        return memoize;\n    };\n\n    // Delays a function for the given number of milliseconds, and then calls\n    // it with the arguments supplied.\n    _.delay = restArgs(function(func, wait, args) {\n        return setTimeout(function() {\n            return func.apply(null, args);\n        }, wait);\n    });\n\n    // Defers a function, scheduling it to run after the current call stack has\n    // cleared.\n    _.defer = _.partial(_.delay, _, 1);\n\n    // Returns a function, that, when invoked, will only be triggered at most once\n    // during a given window of time. Normally, the throttled function will run\n    // as much as it can, without ever going more than once per `wait` duration;\n    // but if you'd like to disable the execution on the leading edge, pass\n    // `{leading: false}`. To disable execution on the trailing edge, ditto.\n    _.throttle = function(func, wait, options) {\n        var timeout, context, args, result;\n        var previous = 0;\n        if (!options) options = {};\n\n        var later = function() {\n            previous = options.leading === false ? 0 : _.now();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        };\n\n        var throttled = function() {\n            var now = _.now();\n            if (!previous && options.leading === false) previous = now;\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n\n        throttled.cancel = function() {\n            clearTimeout(timeout);\n            previous = 0;\n            timeout = context = args = null;\n        };\n\n        return throttled;\n    };\n\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds. If `immediate` is passed, trigger the function on the\n    // leading edge, instead of the trailing.\n    _.debounce = function(func, wait, immediate) {\n        var timeout, result;\n\n        var later = function(context, args) {\n            timeout = null;\n            if (args) result = func.apply(context, args);\n        };\n\n        var debounced = restArgs(function(args) {\n            if (timeout) clearTimeout(timeout);\n            if (immediate) {\n                var callNow = !timeout;\n                timeout = setTimeout(later, wait);\n                if (callNow) result = func.apply(this, args);\n            } else {\n                timeout = _.delay(later, wait, this, args);\n            }\n\n            return result;\n        });\n\n        debounced.cancel = function() {\n            clearTimeout(timeout);\n            timeout = null;\n        };\n\n        return debounced;\n    };\n\n    // Returns the first function passed as an argument to the second,\n    // allowing you to adjust arguments, run code before and after, and\n    // conditionally execute the original function.\n    _.wrap = function(func, wrapper) {\n        return _.partial(wrapper, func);\n    };\n\n    // Returns a negated version of the passed-in predicate.\n    _.negate = function(predicate) {\n        return function() {\n            return !predicate.apply(this, arguments);\n        };\n    };\n\n    // Returns a function that is the composition of a list of functions, each\n    // consuming the return value of the function that follows.\n    _.compose = function() {\n        var args = arguments;\n        var start = args.length - 1;\n        return function() {\n            var i = start;\n            var result = args[start].apply(this, arguments);\n            while (i--) result = args[i].call(this, result);\n            return result;\n        };\n    };\n\n    // Returns a function that will only be executed on and after the Nth call.\n    _.after = function(times, func) {\n        return function() {\n            if (--times < 1) {\n                return func.apply(this, arguments);\n            }\n        };\n    };\n\n    // Returns a function that will only be executed up to (but not including) the Nth call.\n    _.before = function(times, func) {\n        var memo;\n        return function() {\n            if (--times > 0) {\n                memo = func.apply(this, arguments);\n            }\n            if (times <= 1) func = null;\n            return memo;\n        };\n    };\n\n    // Returns a function that will be executed at most one time, no matter how\n    // often you call it. Useful for lazy initialization.\n    _.once = _.partial(_.before, 2);\n\n    _.restArgs = restArgs;\n\n    // Object Functions\n    // ----------------\n\n    // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n    var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n    var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n        'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n    var collectNonEnumProps = function(obj, keys) {\n        var nonEnumIdx = nonEnumerableProps.length;\n        var constructor = obj.constructor;\n        var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n        // Constructor is a special case.\n        var prop = 'constructor';\n        if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n        while (nonEnumIdx--) {\n            prop = nonEnumerableProps[nonEnumIdx];\n            if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n                keys.push(prop);\n            }\n        }\n    };\n\n    // Retrieve the names of an object's own properties.\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\n    _.keys = function(obj) {\n        if (!_.isObject(obj)) return [];\n        if (nativeKeys) return nativeKeys(obj);\n        var keys = [];\n        for (var key in obj) if (_.has(obj, key)) keys.push(key);\n        // Ahem, IE < 9.\n        if (hasEnumBug) collectNonEnumProps(obj, keys);\n        return keys;\n    };\n\n    // Retrieve all the property names of an object.\n    _.allKeys = function(obj) {\n        if (!_.isObject(obj)) return [];\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        // Ahem, IE < 9.\n        if (hasEnumBug) collectNonEnumProps(obj, keys);\n        return keys;\n    };\n\n    // Retrieve the values of an object's properties.\n    _.values = function(obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var values = Array(length);\n        for (var i = 0; i < length; i++) {\n            values[i] = obj[keys[i]];\n        }\n        return values;\n    };\n\n    // Returns the results of applying the iteratee to each element of the object.\n    // In contrast to _.map it returns an object.\n    _.mapObject = function(obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n        var keys = _.keys(obj),\n            length = keys.length,\n            results = {};\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys[index];\n            results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n        }\n        return results;\n    };\n\n    // Convert an object into a list of `[key, value]` pairs.\n    // The opposite of _.object.\n    _.pairs = function(obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var pairs = Array(length);\n        for (var i = 0; i < length; i++) {\n            pairs[i] = [keys[i], obj[keys[i]]];\n        }\n        return pairs;\n    };\n\n    // Invert the keys and values of an object. The values must be serializable.\n    _.invert = function(obj) {\n        var result = {};\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            result[obj[keys[i]]] = keys[i];\n        }\n        return result;\n    };\n\n    // Return a sorted list of the function names available on the object.\n    // Aliased as `methods`.\n    _.functions = _.methods = function(obj) {\n        var names = [];\n        for (var key in obj) {\n            if (_.isFunction(obj[key])) names.push(key);\n        }\n        return names.sort();\n    };\n\n    // An internal function for creating assigner functions.\n    var createAssigner = function(keysFunc, defaults) {\n        return function(obj) {\n            var length = arguments.length;\n            if (defaults) obj = Object(obj);\n            if (length < 2 || obj == null) return obj;\n            for (var index = 1; index < length; index++) {\n                var source = arguments[index],\n                    keys = keysFunc(source),\n                    l = keys.length;\n                for (var i = 0; i < l; i++) {\n                    var key = keys[i];\n                    if (!defaults || obj[key] === void 0) obj[key] = source[key];\n                }\n            }\n            return obj;\n        };\n    };\n\n    // Extend a given object with all the properties in passed-in object(s).\n    _.extend = createAssigner(_.allKeys);\n\n    // Assigns a given object with all the own properties in the passed-in object(s).\n    // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    _.extendOwn = _.assign = createAssigner(_.keys);\n\n    // Returns the first key on an object that passes a predicate test.\n    _.findKey = function(obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = _.keys(obj), key;\n        for (var i = 0, length = keys.length; i < length; i++) {\n            key = keys[i];\n            if (predicate(obj[key], key, obj)) return key;\n        }\n    };\n\n    // Internal pick helper function to determine if `obj` has key `key`.\n    var keyInObj = function(value, key, obj) {\n        return key in obj;\n    };\n\n    // Return a copy of the object only containing the whitelisted properties.\n    _.pick = restArgs(function(obj, keys) {\n        var result = {}, iteratee = keys[0];\n        if (obj == null) return result;\n        if (_.isFunction(iteratee)) {\n            if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n            keys = _.allKeys(obj);\n        } else {\n            iteratee = keyInObj;\n            keys = flatten(keys, false, false);\n            obj = Object(obj);\n        }\n        for (var i = 0, length = keys.length; i < length; i++) {\n            var key = keys[i];\n            var value = obj[key];\n            if (iteratee(value, key, obj)) result[key] = value;\n        }\n        return result;\n    });\n\n    // Return a copy of the object without the blacklisted properties.\n    _.omit = restArgs(function(obj, keys) {\n        var iteratee = keys[0], context;\n        if (_.isFunction(iteratee)) {\n            iteratee = _.negate(iteratee);\n            if (keys.length > 1) context = keys[1];\n        } else {\n            keys = _.map(flatten(keys, false, false), String);\n            iteratee = function(value, key) {\n                return !_.contains(keys, key);\n            };\n        }\n        return _.pick(obj, iteratee, context);\n    });\n\n    // Fill in a given object with default properties.\n    _.defaults = createAssigner(_.allKeys, true);\n\n    // Creates an object that inherits from the given prototype object.\n    // If additional properties are provided then they will be added to the\n    // created object.\n    _.create = function(prototype, props) {\n        var result = baseCreate(prototype);\n        if (props) _.extendOwn(result, props);\n        return result;\n    };\n\n    // Create a (shallow-cloned) duplicate of an object.\n    _.clone = function(obj) {\n        if (!_.isObject(obj)) return obj;\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n    };\n\n    // Invokes interceptor with the obj, and then returns obj.\n    // The primary purpose of this method is to \"tap into\" a method chain, in\n    // order to perform operations on intermediate results within the chain.\n    _.tap = function(obj, interceptor) {\n        interceptor(obj);\n        return obj;\n    };\n\n    // Returns whether an object has a given set of `key:value` pairs.\n    _.isMatch = function(object, attrs) {\n        var keys = _.keys(attrs), length = keys.length;\n        if (object == null) return !length;\n        var obj = Object(object);\n        for (var i = 0; i < length; i++) {\n            var key = keys[i];\n            if (attrs[key] !== obj[key] || !(key in obj)) return false;\n        }\n        return true;\n    };\n\n\n    // Internal recursive comparison function for `isEqual`.\n    var eq, deepEq;\n    eq = function(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\n        // A strict comparison is necessary because `null == undefined`.\n        if (a == null || b == null) return a === b;\n        // `NaN`s are equivalent, but non-reflexive.\n        if (a !== a) return b !== b;\n        // Exhaust primitive checks\n        var type = typeof a;\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n        return deepEq(a, b, aStack, bStack);\n    };\n\n    // Internal recursive comparison function for `isEqual`.\n    deepEq = function(a, b, aStack, bStack) {\n        // Unwrap any wrapped objects.\n        if (a instanceof _) a = a._wrapped;\n        if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className !== toString.call(b)) return false;\n        switch (className) {\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n            case '[object RegExp]':\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n            case '[object String]':\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n                // equivalent to `new String(\"5\")`.\n                return '' + a === '' + b;\n            case '[object Number]':\n                // `NaN`s are equivalent, but non-reflexive.\n                // Object(NaN) is equivalent to NaN.\n                if (+a !== +a) return +b !== +b;\n                // An `egal` comparison is performed for other numeric values.\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n            case '[object Date]':\n            case '[object Boolean]':\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n                // millisecond representations. Note that invalid dates with millisecond representations\n                // of `NaN` are not equivalent.\n                return +a === +b;\n            case '[object Symbol]':\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n        }\n\n        var areArrays = className === '[object Array]';\n        if (!areArrays) {\n            if (typeof a != 'object' || typeof b != 'object') return false;\n\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n            // from different frames are.\n            var aCtor = a.constructor, bCtor = b.constructor;\n            if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                _.isFunction(bCtor) && bCtor instanceof bCtor)\n                && ('constructor' in a && 'constructor' in b)) {\n                return false;\n            }\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        aStack = aStack || [];\n        bStack = bStack || [];\n        var length = aStack.length;\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] === a) return bStack[length] === b;\n        }\n\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n\n        // Recursively compare objects and arrays.\n        if (areArrays) {\n            // Compare type lengths to determine if a deep comparison is necessary.\n            length = a.length;\n            if (length !== b.length) return false;\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (length--) {\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\n            }\n        } else {\n            // Deep compare objects.\n            var keys = _.keys(a), key;\n            length = keys.length;\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\n            if (_.keys(b).length !== length) return false;\n            while (length--) {\n                // Deep compare each member\n                key = keys[length];\n                if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return true;\n    };\n\n    // Perform a deep comparison to check if two objects are equal.\n    _.isEqual = function(a, b) {\n        return eq(a, b);\n    };\n\n    // Is a given type, string, or object empty?\n    // An \"empty\" object has no enumerable own-properties.\n    _.isEmpty = function(obj) {\n        if (obj == null) return true;\n        if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n        return _.keys(obj).length === 0;\n    };\n\n    // Is a given value a DOM element?\n    _.isElement = function(obj) {\n        return !!(obj && obj.nodeType === 1);\n    };\n\n    // Is a given value an type?\n    // Delegates to ECMA5's native Array.isArray\n    _.isArray = nativeIsArray || function(obj) {\n            return toString.call(obj) === '[object Array]';\n        };\n\n    // Is a given variable an object?\n    _.isObject = function(obj) {\n        var type = typeof obj;\n        return type === 'function' || type === 'object' && !!obj;\n    };\n\n    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n    _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n        _['is' + name] = function(obj) {\n            return toString.call(obj) === '[object ' + name + ']';\n        };\n    });\n\n    // Define a fallback version of the method in browsers (ahem, IE < 9), where\n    // there isn't any inspectable \"Arguments\" type.\n    if (!_.isArguments(arguments)) {\n        _.isArguments = function(obj) {\n            return _.has(obj, 'callee');\n        };\n    }\n\n    // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n    // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n    var nodelist = root.document && root.document.childNodes;\n    if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n        _.isFunction = function(obj) {\n            return typeof obj == 'function' || false;\n        };\n    }\n\n    // Is a given object a finite number?\n    _.isFinite = function(obj) {\n        return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n    };\n\n    // Is the given value `NaN`?\n    _.isNaN = function(obj) {\n        return _.isNumber(obj) && isNaN(obj);\n    };\n\n    // Is a given value a boolean?\n    _.isBoolean = function(obj) {\n        return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n    };\n\n    // Is a given value equal to null?\n    _.isNull = function(obj) {\n        return obj === null;\n    };\n\n    // Is a given variable undefined?\n    _.isUndefined = function(obj) {\n        return obj === void 0;\n    };\n\n    // Shortcut function for checking if an object has a given property directly\n    // on itself (in other words, not on a prototype).\n    _.has = function(obj, path) {\n        if (!_.isArray(path)) {\n            return obj != null && hasOwnProperty.call(obj, path);\n        }\n        var length = path.length;\n        for (var i = 0; i < length; i++) {\n            var key = path[i];\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n            obj = obj[key];\n        }\n        return !!length;\n    };\n\n    // Utility Functions\n    // -----------------\n\n    // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n    // previous owner. Returns a reference to the Underscore object.\n    _.noConflict = function() {\n        root._ = previousUnderscore;\n        return this;\n    };\n\n    // Keep the identity function around for default iteratees.\n    _.identity = function(value) {\n        return value;\n    };\n\n    // Predicate-generating functions. Often useful outside of Underscore.\n    _.constant = function(value) {\n        return function() {\n            return value;\n        };\n    };\n\n    _.noop = function(){};\n\n    _.property = function(path) {\n        if (!_.isArray(path)) {\n            return shallowProperty(path);\n        }\n        return function(obj) {\n            return deepGet(obj, path);\n        };\n    };\n\n    // Generates a function for a given object that returns a given property.\n    _.propertyOf = function(obj) {\n        if (obj == null) {\n            return function(){};\n        }\n        return function(path) {\n            return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n        };\n    };\n\n    // Returns a predicate for checking whether an object has a given set of\n    // `key:value` pairs.\n    _.matcher = _.matches = function(attrs) {\n        attrs = _.extendOwn({}, attrs);\n        return function(obj) {\n            return _.isMatch(obj, attrs);\n        };\n    };\n\n    // Run a function **n** times.\n    _.times = function(n, iteratee, context) {\n        var accum = Array(Math.max(0, n));\n        iteratee = optimizeCb(iteratee, context, 1);\n        for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n        return accum;\n    };\n\n    // Return a random integer between min and max (inclusive).\n    _.random = function(min, max) {\n        if (max == null) {\n            max = min;\n            min = 0;\n        }\n        return min + Math.floor(Math.random() * (max - min + 1));\n    };\n\n    // A (possibly faster) way to get the current timestamp as an integer.\n    _.now = Date.now || function() {\n            return new Date().getTime();\n        };\n\n    // List of HTML entities for escaping.\n    var escapeMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '`': '&#x60;'\n    };\n    var unescapeMap = _.invert(escapeMap);\n\n    // Functions for escaping and unescaping strings to/from HTML interpolation.\n    var createEscaper = function(map) {\n        var escaper = function(match) {\n            return map[match];\n        };\n        // Regexes for identifying a key that needs to be escaped.\n        var source = '(?:' + _.keys(map).join('|') + ')';\n        var testRegexp = RegExp(source);\n        var replaceRegexp = RegExp(source, 'g');\n        return function(string) {\n            string = string == null ? '' : '' + string;\n            return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n        };\n    };\n    _.escape = createEscaper(escapeMap);\n    _.unescape = createEscaper(unescapeMap);\n\n    // Traverses the children of `obj` along `path`. If a child is a function, it\n    // is invoked with its parent as context. Returns the value of the final\n    // child, or `fallback` if any child is undefined.\n    _.result = function(obj, path, fallback) {\n        if (!_.isArray(path)) path = [path];\n        var length = path.length;\n        if (!length) {\n            return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n        }\n        for (var i = 0; i < length; i++) {\n            var prop = obj == null ? void 0 : obj[path[i]];\n            if (prop === void 0) {\n                prop = fallback;\n                i = length; // Ensure we don't continue iterating.\n            }\n            obj = _.isFunction(prop) ? prop.call(obj) : prop;\n        }\n        return obj;\n    };\n\n    // Generate a unique integer id (unique within the entire client session).\n    // Useful for temporary DOM ids.\n    var idCounter = 0;\n    _.uniqueId = function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n    };\n\n    // By default, Underscore uses ERB-style template delimiters, change the\n    // following template settings to use alternative delimiters.\n    _.templateSettings = {\n        evaluate: /<%([\\s\\S]+?)%>/g,\n        interpolate: /<%=([\\s\\S]+?)%>/g,\n        escape: /<%-([\\s\\S]+?)%>/g\n    };\n\n    // When customizing `templateSettings`, if you don't want to define an\n    // interpolation, evaluation or escaping regex, we need one that is\n    // guaranteed not to match.\n    var noMatch = /(.)^/;\n\n    // Certain characters need to be escaped so that they can be put into a\n    // string literal.\n    var escapes = {\n        \"'\": \"'\",\n        '\\\\': '\\\\',\n        '\\r': 'r',\n        '\\n': 'n',\n        '\\u2028': 'u2028',\n        '\\u2029': 'u2029'\n    };\n\n    var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n    var escapeChar = function(match) {\n        return '\\\\' + escapes[match];\n    };\n\n    // JavaScript micro-templating, similar to John Resig's implementation.\n    // Underscore templating handles arbitrary delimiters, preserves whitespace,\n    // and correctly escapes quotes within interpolated code.\n    // NB: `oldSettings` only exists for backwards compatibility.\n    _.template = function(text, settings, oldSettings) {\n        if (!settings && oldSettings) settings = oldSettings;\n        settings = _.defaults({}, settings, _.templateSettings);\n\n        // Combine delimiters into one regular expression via alternation.\n        var matcher = RegExp([\n                (settings.escape || noMatch).source,\n                (settings.interpolate || noMatch).source,\n                (settings.evaluate || noMatch).source\n            ].join('|') + '|$', 'g');\n\n        // Compile the template source, escaping string literals appropriately.\n        var index = 0;\n        var source = \"__p+='\";\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n            source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n            index = offset + match.length;\n\n            if (escape) {\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n            } else if (interpolate) {\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n            } else if (evaluate) {\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\n            }\n\n            // Adobe VMs need the match returned to produce the correct offset.\n            return match;\n        });\n        source += \"';\\n\";\n\n        // If a variable is not specified, place data values in local scope.\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n            source + 'return __p;\\n';\n\n        var render;\n        try {\n            render = new Function(settings.variable || 'obj', '_', source);\n        } catch (e) {\n            e.source = source;\n            throw e;\n        }\n\n        var template = function(data) {\n            return render.call(this, data, _);\n        };\n\n        // Provide the compiled source as a convenience for precompilation.\n        var argument = settings.variable || 'obj';\n        template.source = 'function(' + argument + '){\\n' + source + '}';\n\n        return template;\n    };\n\n    // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n    _.chain = function(obj) {\n        var instance = _(obj);\n        instance._chain = true;\n        return instance;\n    };\n\n    // OOP\n    // ---------------\n    // If Underscore is called as a function, it returns a wrapped object that\n    // can be used OO-style. This wrapper holds altered versions of all the\n    // underscore functions. Wrapped objects may be chained.\n\n    // Helper function to continue chaining intermediate results.\n    var chainResult = function(instance, obj) {\n        return instance._chain ? _(obj).chain() : obj;\n    };\n\n    // Add your own custom functions to the Underscore object.\n    _.mixin = function(obj) {\n        _.each(_.functions(obj), function(name) {\n            var func = _[name] = obj[name];\n            _.prototype[name] = function() {\n                var args = [this._wrapped];\n                push.apply(args, arguments);\n                return chainResult(this, func.apply(_, args));\n            };\n        });\n        return _;\n    };\n\n    // Add all of the Underscore functions to the wrapper object.\n    _.mixin(_);\n\n    // Add all mutator Array functions to the wrapper.\n    _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n            var obj = this._wrapped;\n            method.apply(obj, arguments);\n            if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n            return chainResult(this, obj);\n        };\n    });\n\n    // Add all accessor Array functions to the wrapper.\n    _.each(['concat', 'join', 'slice'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n            return chainResult(this, method.apply(this._wrapped, arguments));\n        };\n    });\n\n    // Extracts the result from a wrapped and chained object.\n    _.prototype.value = function() {\n        return this._wrapped;\n    };\n\n    // Provide unwrapping proxy for some methods used in engine operations\n    // such as arithmetic and JSON stringification.\n    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n    _.prototype.toString = function() {\n        return String(this._wrapped);\n    };\n\n    // AMD registration happens at the end for compatibility with AMD loaders\n    // that may not enforce next-turn semantics on modules. Even though general\n    // practice for AMD registration is to be anonymous, underscore registers\n    // as a named module because, like jQuery, it is a base library that is\n    // popular enough to be bundled in a third party lib, but not be part of\n    // an AMD load request. Those cases could generate an error when an\n    // anonymous define() is called outside of a loader request.\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n            return _;\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n}());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../2018-contest/node_modules/_webpack@4.6.0@webpack/buildin/global.js */ \"./node_modules/_webpack@4.6.0@webpack/buildin/global.js\"), __webpack_require__(/*! ./../../2018-contest/node_modules/_webpack@4.6.0@webpack/buildin/module.js */ \"./node_modules/_webpack@4.6.0@webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../ccjs/js/underscore.js\n");

/***/ }),

/***/ "../ccjs/util/event-manager.js":
/*!*************************************!*\
  !*** ../ccjs/util/event-manager.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\nEventManager is a single instance class\n */\nclass EventManager {\n    constructor() {\n        this.events = {}\n        // on is an alias for addListern\n        this.on = this.addListener\n    }\n    addListener(eventName, listener) {\n        if (this.events[eventName] === undefined) {\n            this.events[eventName] = []\n        }\n        if (this.events[eventName].indexOf(listener) === -1) {\n            this.events.push(listener)\n        }\n    }\n    removeListener(eventName, listener) {\n        if (this.events[eventName] === undefined) return\n        const arr = this.events[eventName]\n        arr.splice(arr.indexOf(listener), 1)\n    }\n    emit(eventName, ...args) {\n        if (this.events[eventName] === undefined) return\n        this.events[eventName].forEach(listener => listener(...args))\n    }\n\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (new EventManager());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vY2Nqcy91dGlsL2V2ZW50LW1hbmFnZXIuanM/ZmY4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpRiIsImZpbGUiOiIuLi9jY2pzL3V0aWwvZXZlbnQtbWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5FdmVudE1hbmFnZXIgaXMgYSBzaW5nbGUgaW5zdGFuY2UgY2xhc3NcbiAqL1xuY2xhc3MgRXZlbnRNYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ldmVudHMgPSB7fVxuICAgICAgICAvLyBvbiBpcyBhbiBhbGlhcyBmb3IgYWRkTGlzdGVyblxuICAgICAgICB0aGlzLm9uID0gdGhpcy5hZGRMaXN0ZW5lclxuICAgIH1cbiAgICBhZGRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50c1tldmVudE5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPSBbXVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmV2ZW50c1tldmVudE5hbWVdLmluZGV4T2YobGlzdGVuZXIpID09PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5ldmVudHMucHVzaChsaXN0ZW5lcilcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW1vdmVMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50c1tldmVudE5hbWVdID09PSB1bmRlZmluZWQpIHJldHVyblxuICAgICAgICBjb25zdCBhcnIgPSB0aGlzLmV2ZW50c1tldmVudE5hbWVdXG4gICAgICAgIGFyci5zcGxpY2UoYXJyLmluZGV4T2YobGlzdGVuZXIpLCAxKVxuICAgIH1cbiAgICBlbWl0KGV2ZW50TmFtZSwgLi4uYXJncykge1xuICAgICAgICBpZiAodGhpcy5ldmVudHNbZXZlbnROYW1lXSA9PT0gdW5kZWZpbmVkKSByZXR1cm5cbiAgICAgICAgdGhpcy5ldmVudHNbZXZlbnROYW1lXS5mb3JFYWNoKGxpc3RlbmVyID0+IGxpc3RlbmVyKC4uLmFyZ3MpKVxuICAgIH1cblxufVxuZXhwb3J0IGRlZmF1bHQgbmV3IEV2ZW50TWFuYWdlcigpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../ccjs/util/event-manager.js\n");

/***/ }),

/***/ "../ccjs/util/util.js":
/*!****************************!*\
  !*** ../ccjs/util/util.js ***!
  \****************************/
/*! exports provided: default, log */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"log\", function() { return log; });\n/* harmony import */ var _js_underscore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/underscore */ \"../ccjs/js/underscore.js\");\n/* harmony import */ var _js_underscore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_underscore__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Created by congcong on 2016/11/19.\n */\n\nlet Util = {\n    /**\n     * 删除对象属性\n     * @param obj\n     * @param key [String]\n     */\n    clearKey(obj,key){\n        if(_js_underscore__WEBPACK_IMPORTED_MODULE_0___default.a.isString(key)){\n            if(_js_underscore__WEBPACK_IMPORTED_MODULE_0___default.a.has(obj,key)){\n                delete obj[key]\n            }\n        }\n    },\n    /**\n     * 删除多个对象属性\n     * @param obj\n     * @param keys [Array]\n     */\n    clearKeys(obj,keys){\n        if(_js_underscore__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(keys)){\n            _js_underscore__WEBPACK_IMPORTED_MODULE_0___default.a.each(keys,function(v,i){\n                this.clearKey(obj,v)\n            }.bind(this))\n        }\n    }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Util);\nfunction log(mes){\n    console.log(mes);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vY2Nqcy91dGlsL3V0aWwuanM/MGI2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL2NjanMvdXRpbC91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGNvbmdjb25nIG9uIDIwMTYvMTEvMTkuXG4gKi9cbmltcG9ydCBfIGZyb20gJy4uL2pzL3VuZGVyc2NvcmUnXG5sZXQgVXRpbCA9IHtcbiAgICAvKipcbiAgICAgKiDliKDpmaTlr7nosaHlsZ7mgKdcbiAgICAgKiBAcGFyYW0gb2JqXG4gICAgICogQHBhcmFtIGtleSBbU3RyaW5nXVxuICAgICAqL1xuICAgIGNsZWFyS2V5KG9iaixrZXkpe1xuICAgICAgICBpZihfLmlzU3RyaW5nKGtleSkpe1xuICAgICAgICAgICAgaWYoXy5oYXMob2JqLGtleSkpe1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBvYmpba2V5XVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiDliKDpmaTlpJrkuKrlr7nosaHlsZ7mgKdcbiAgICAgKiBAcGFyYW0gb2JqXG4gICAgICogQHBhcmFtIGtleXMgW0FycmF5XVxuICAgICAqL1xuICAgIGNsZWFyS2V5cyhvYmosa2V5cyl7XG4gICAgICAgIGlmKF8uaXNBcnJheShrZXlzKSl7XG4gICAgICAgICAgICBfLmVhY2goa2V5cyxmdW5jdGlvbih2LGkpe1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJLZXkob2JqLHYpXG4gICAgICAgICAgICB9LmJpbmQodGhpcykpXG4gICAgICAgIH1cbiAgICB9XG5cbn07XG5leHBvcnQgZGVmYXVsdCBVdGlsO1xuZXhwb3J0IGZ1bmN0aW9uIGxvZyhtZXMpe1xuICAgIGNvbnNvbGUubG9nKG1lcyk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../ccjs/util/util.js\n");

/***/ }),

/***/ "./css/main.css":
/*!**********************!*\
  !*** ./css/main.css ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/_css-loader@0.28.11@css-loader??ref--5-1!../node_modules/_px2rem-loader@0.1.9@px2rem-loader??ref--5-2!./main.css */ \"./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./node_modules/_px2rem-loader@0.1.9@px2rem-loader/index.js??ref--5-2!./css/main.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js */ \"./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jc3MvbWFpbi5jc3M/ZmRmOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuL2Nzcy9tYWluLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvX3B4MnJlbS1sb2FkZXJAMC4xLjlAcHgycmVtLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTIhLi9tYWluLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wic291cmNlTWFwXCI6dHJ1ZSxcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9fc3R5bGUtbG9hZGVyQDAuMjEuMEBzdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9fY3NzLWxvYWRlckAwLjI4LjExQGNzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL25vZGVfbW9kdWxlcy9fcHgycmVtLWxvYWRlckAwLjEuOUBweDJyZW0tbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMiEuL21haW4uY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vbm9kZV9tb2R1bGVzL19weDJyZW0tbG9hZGVyQDAuMS45QHB4MnJlbS1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0yIS4vbWFpbi5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./css/main.css\n");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(/*! ../css/main.css */ \"./css/main.css\");\n\nvar _util = __webpack_require__(/*! ccjs/util/util.js */ \"../ccjs/util/util.js\");\n\nvar _eventManager = __webpack_require__(/*! ccjs/util/event-manager.js */ \"../ccjs/util/event-manager.js\");\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _game = __webpack_require__(/*! ../templates/game.art */ \"./templates/game.art\");\n\nvar _game2 = _interopRequireDefault(_game);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n'use strict';\n\nvar SETTINGS = {\n    rowLen: 4,\n    colLen: 4,\n    target: 2048\n};\n\nvar Grids = function () {\n    function Grids(el) {\n        _classCallCheck(this, Grids);\n\n        this.container = el;\n        this.rowLen = SETTINGS.rowLen;\n        this.colLen = SETTINGS.colLen;\n        // grid content\n        this.contents = [];\n        // init contents\n        this.clearContents();\n    }\n\n    _createClass(Grids, [{\n        key: 'clearContents',\n        value: function clearContents() {\n            for (var ri = 0; ri < this.rowLen; ri++) {\n                this.contents[ri] = [];\n                for (var ci = 0; ci < this.colLen; ci++) {\n                    this.contents[ri][ci] = null;\n                }\n            }\n        }\n    }, {\n        key: 'forEachContent',\n        value: function forEachContent(rowCallback, colCallback) {\n            for (var ri = 0; ri < this.rowLen; ri++) {\n                if (typeof rowCallback === 'function') {\n                    // cb(item, index, array)\n                    rowCallback(this.contents[ri], ri, this.contents);\n                }\n                for (var ci = 0; ci < this.colLen; ci++) {\n                    if (typeof colCallback === 'function') {\n                        // cb(item, index, array)\n                        colCallback(this.contents[ri][ci], ci, this.contents);\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'getEmptyGridsPos',\n        value: function getEmptyGridsPos() {\n            var arr = [];\n            for (var ri = 0; ri < this.rowLen; ri++) {\n                for (var ci = 0; ci < this.colLen; ci++) {\n                    if (this.contents[ri][ci] === null) {\n                        arr.push([ri, ci]);\n                    }\n                }\n            }\n            return arr;\n        }\n    }]);\n\n    return Grids;\n}();\n\nvar Tile = function () {\n    function Tile() {\n        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n        var rowIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var colIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n        _classCallCheck(this, Tile);\n\n        if (Tile.tilesContainer === undefined) {\n            throw new Error('Tile must be assigned a container in Tils.tilesContainer');\n        }\n        this.container = Tile.tilesContainer;\n        this.status = {\n            merged: false,\n            moved: false,\n            new: true\n        };\n\n        var _render = this.render(rowIndex, colIndex, value),\n            _render2 = _slicedToArray(_render, 2),\n            outer = _render2[0],\n            inner = _render2[1];\n\n        this.element = outer;\n        this.innerEl = inner;\n        // init value\n        this._value = value;\n        this._rowIndex = rowIndex;\n        this._colIndex = colIndex;\n    }\n\n    _createClass(Tile, [{\n        key: 'render',\n        value: function render(rowIndex, colIndex, value) {\n            var div = document.createElement('div');\n            div.className = 'tile tile-' + rowIndex + '-' + colIndex + ' tile-new';\n            var inner = document.createElement('div');\n            inner.className = 'tile-inner tile-value-' + value;\n            inner.innerText = value;\n            div.appendChild(inner);\n            this.container.appendChild(div);\n            this.status.new = true;\n            return [div, inner];\n        }\n    }, {\n        key: 'resetStatus',\n        value: function resetStatus() {\n            this.status.moved = false;\n            this.status.merged = false;\n            this.status.new = false;\n            this.element.className = this.element.className.replace('tile-merged', '');\n            this.element.className = this.element.className.replace('tile-new', '');\n        }\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this = this;\n\n            var oldValue = this._value;\n            this._value = value;\n            this.innerEl.innerText = value;\n            this.innerEl.className = this.innerEl.className.replace(/tile-value-(\\d+)/, 'tile-value-' + value);\n            // only merge action can change value\n            this.element.className += ' tile-merged';\n            // flag isMerges\n            this.status.merged = true;\n            // emit events\n            var cbs = Tile.events['tileValueChanged'];\n            if (cbs !== undefined) {\n                cbs.forEach(function (cb) {\n                    cb({\n                        type: 'tileValueChanged',\n                        tile: _this,\n                        newValue: value,\n                        oldValue: oldValue\n                    });\n                });\n            }\n        },\n        get: function get() {\n            return this._value;\n        }\n    }, {\n        key: 'rowIndex',\n        set: function set(rowIndex) {\n            this.element.className = this.element.className.replace(/tile-(\\d+)-(\\d+)/, 'tile-' + rowIndex + '-$2');\n            this._rowIndex = rowIndex;\n            this.status.moved = true;\n        },\n        get: function get() {\n            return this._rowIndex;\n        }\n    }, {\n        key: 'colIndex',\n        set: function set(colIndex) {\n            this.element.className = this.element.className.replace(/tile-(\\d+)-(\\d+)/, 'tile-$1-' + colIndex);\n            this._colIndex = colIndex;\n            this.status.moved = true;\n        },\n        get: function get() {\n            return this._colIndex;\n        }\n    }], [{\n        key: 'addEventHandler',\n        value: function addEventHandler(type, cb) {\n            var event = Tile.events[type];\n            if (Tile.events[type] === undefined) {\n                Tile.events[type] = [];\n            }\n            Tile.events[type].push(cb);\n        }\n    }]);\n\n    return Tile;\n}();\n\nTile.events = {};\n\nvar Game = function () {\n    _createClass(Game, [{\n        key: 'score',\n        get: function get() {\n            return this._score;\n        },\n        set: function set(value) {\n            this._score = value;\n            this.scoreEl.innerText = value;\n        }\n    }]);\n\n    function Game(el) {\n        _classCallCheck(this, Game);\n\n        // render template\n        el.innerHTML = (0, _game2.default)({});\n        this.container = el.querySelector('.game-container');\n        this.grids = new Grids(el.querySelector('.grids-container'));\n        Tile.tilesContainer = el.querySelector('.tiles-container');\n        this.scoreEl = el.querySelector('.game-score');\n        this._score = 0;\n        this.btnNewGame = el.querySelector('.new-game');\n        this.gameResultEl = el.querySelector('.game-result');\n        this.btnRetry = el.querySelector('.game-retry');\n        this.overlay = el.querySelector('.game-overlay');\n\n        // fix events context\n        this.gameEvents = this.gameEvents.bind(this);\n        document.addEventListener('click', this.gameEvents);\n        // self defined events\n        Tile.addEventHandler('tileValueChanged', this.gameEvents);\n    }\n\n    _createClass(Game, [{\n        key: 'newGame',\n        value: function newGame() {\n            this.grids.clearContents();\n            Tile.tilesContainer.innerHTML = '';\n            this.overlay.style.display = 'none';\n            this.score = 0;\n            document.addEventListener('keydown', this.gameEvents);\n            // create 2 initial tiles\n            this.newRandomTiles(2);\n        }\n    }, {\n        key: 'gameEvents',\n        value: function gameEvents(ev) {\n            ev = ev || event;\n            switch (ev.type) {\n                case 'click':\n                    {\n                        if (ev.target === this.btnNewGame || ev.target === this.btnRetry) {\n                            this.newGame();\n                        }\n                        break;\n                    }\n                case 'keydown':\n                    {\n                        var keyMap = {\n                            '37': 'left',\n                            '38': 'up',\n                            '39': 'right',\n                            '40': 'down'\n                        };\n                        var direction = keyMap[ev.keyCode + ''];\n                        if (direction !== undefined) {\n                            ev.preventDefault();\n                            this.resetTilesStatus();\n                            this.moveTiles(direction);\n                            this.checkTilesStatus();\n                        }\n                        break;\n                    }\n                case 'tileValueChanged':\n                    {\n                        // check if win\n                        if (ev.newValue === SETTINGS.target) {\n                            this.setGameResult('win');\n                        }\n                    }\n            }\n        }\n    }, {\n        key: 'resetTilesStatus',\n        value: function resetTilesStatus() {\n            this.grids.forEachContent(null, function (tile) {\n                if (tile === null) return;\n                tile.resetStatus();\n            });\n        }\n    }, {\n        key: 'checkTilesStatus',\n        value: function checkTilesStatus() {\n            var someTileChanged = false;\n            this.grids.forEachContent(null, function (tile) {\n                if (tile === null) return;\n                if (tile.status.moved || tile.status.merged) {\n                    someTileChanged = true;\n                    // todo: break inner and outer loop\n                }\n            });\n            // if none tile changed, no new tile\n            if (someTileChanged) {\n                this.newRandomTiles(1);\n            } else {\n                // check if game over\n                var emptyPos = this.grids.getEmptyGridsPos();\n                if (emptyPos.length === 0 && !this.hasValueEqualedAdjTiles()) {\n                    // alert('Game over!')\n                    this.setGameResult('lose');\n                }\n            }\n        }\n    }, {\n        key: 'setGameResult',\n        value: function setGameResult() {\n            var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'lose';\n\n            this.gameResultEl.className = 'game-result ' + result;\n            this.gameResultEl.innerHTML = result === 'win' ? 'You win!' : 'Game over!';\n            this.overlay.style.display = 'block';\n            document.removeEventListener('keydown', this.gameEvents);\n        }\n    }, {\n        key: 'hasValueEqualedAdjTiles',\n        value: function hasValueEqualedAdjTiles() {\n            // check right, down of every tile\n            for (var ri = 0, rlen = this.grids.contents.length; ri < rlen; ri++) {\n                for (var ci = 0, clen = this.grids.contents[ri].length; ci < clen; ci++) {\n                    var tile = this.grids.contents[ri][ci];\n                    if (tile === null) continue;\n                    if (ci < clen - 1) {\n                        var rTile = this.grids.contents[ri][ci + 1];\n                        if (rTile !== null && rTile.value === tile.value) {\n                            return true;\n                        }\n                    }\n                    if (ri < rlen - 1) {\n                        var dTile = this.grids.contents[ri + 1][ci];\n                        if (dTile !== null && dTile.value === tile.value) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    }, {\n        key: 'moveTiles',\n        value: function moveTiles(direction) {\n            // some game rules to be considered:\n            // if none moved, then new tile will not generate\n            switch (direction) {\n                case 'left':\n                    {\n                        // colIndex--\n                        for (var ri = 0, len = this.grids.contents.length; ri < len; ri++) {\n                            // every row allows one merged\n                            var merged = false;\n                            var colLen = this.grids.contents[ri].length;\n                            for (var ci = 1; ci < colLen; ci++) {\n                                var tile = this.grids.contents[ri][ci];\n                                if (tile === null) continue;\n                                var cii = ci;\n                                while (--cii >= 0) {\n                                    var preTile = this.grids.contents[ri][cii];\n                                    if (preTile !== null) {\n                                        if (preTile.value === tile.value && merged === false) {\n                                            preTile.value += tile.value;\n                                            this.score += preTile.value;\n                                            tile.element.parentNode.removeChild(tile.element);\n                                            this.grids.contents[ri][ci] = null;\n                                            preTile.status.merged = true;\n                                            merged = true;\n                                            break;\n                                        } else if (tile.colIndex !== cii + 1) {\n                                            tile.colIndex = cii + 1;\n                                            this.grids.contents[ri][ci] = null;\n                                            this.grids.contents[ri][cii + 1] = tile;\n                                            tile.status.moved = true;\n                                            break;\n                                        } else {\n                                            break;\n                                        }\n                                    } else if (cii === 0) {\n                                        tile.colIndex = cii;\n                                        this.grids.contents[ri][ci] = null;\n                                        this.grids.contents[ri][cii] = tile;\n                                        tile.status.moved = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                case 'right':\n                    {\n                        // colIndex++\n                        for (var _ri = 0, _len = this.grids.contents.length; _ri < _len; _ri++) {\n                            var _merged = false;\n                            var _colLen = this.grids.contents[_ri].length;\n                            for (var _ci = _colLen - 2; _ci >= 0; _ci--) {\n                                var _tile = this.grids.contents[_ri][_ci];\n                                if (_tile === null) continue;\n                                var _cii = _ci;\n                                while (++_cii <= _colLen - 1) {\n                                    var _preTile = this.grids.contents[_ri][_cii];\n                                    if (_preTile !== null) {\n                                        if (_preTile.value === _tile.value && _merged === false) {\n                                            _preTile.value += _tile.value;\n                                            this.score += _preTile.value;\n                                            _tile.element.parentNode.removeChild(_tile.element);\n                                            this.grids.contents[_ri][_ci] = null;\n                                            _preTile.status.merged = true;\n                                            _merged = true;\n                                            break;\n                                        } else if (_tile.colIndex !== _cii - 1) {\n                                            _tile.colIndex = _cii - 1;\n                                            this.grids.contents[_ri][_ci] = null;\n                                            this.grids.contents[_ri][_cii - 1] = _tile;\n                                            _tile.status.moved = true;\n                                            break;\n                                        } else {\n                                            break;\n                                        }\n                                    } else if (_cii === _colLen - 1) {\n                                        _tile.colIndex = _cii;\n                                        this.grids.contents[_ri][_ci] = null;\n                                        this.grids.contents[_ri][_cii] = _tile;\n                                        _tile.status.moved = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                case 'up':\n                    {\n                        // rowIndex--\n                        // every column allow one merged\n                        var _merged2 = [];\n                        for (var _ci2 = 0, _len2 = this.grids.colLen; _ci2 < _len2; _ci2++) {\n                            _merged2[_ci2] = false;\n                        }\n                        for (var _ri2 = 1, _len3 = this.grids.contents.length; _ri2 < _len3; _ri2++) {\n                            for (var _ci3 = 0, _len4 = this.grids.contents[_ri2].length; _ci3 < _len4; _ci3++) {\n                                var _tile2 = this.grids.contents[_ri2][_ci3];\n                                if (_tile2 === null) continue;\n                                var tri = _tile2.rowIndex;\n                                while (--tri >= 0) {\n                                    var _preTile2 = this.grids.contents[tri][_ci3];\n                                    if (_preTile2 !== null) {\n                                        if (_preTile2.value === _tile2.value && _merged2[_ci3] === false) {\n                                            // merged tile into the preTile with the same value\n                                            // update preTile value\n                                            _preTile2.value += _tile2.value;\n                                            this.score += _preTile2.value;\n                                            // remove this tile\n                                            _tile2.element.parentNode.removeChild(_tile2.element);\n                                            this.grids.contents[_ri2][_ci3] = null;\n                                            _preTile2.status.merged = true;\n                                            _merged2[_ci3] = true;\n                                            break;\n                                        } else if (_tile2.rowIndex !== tri + 1) {\n                                            _tile2.rowIndex = tri + 1;\n                                            this.grids.contents[_ri2][_ci3] = null;\n                                            this.grids.contents[_tile2.rowIndex][_ci3] = _tile2;\n                                            _tile2.status.moved = true;\n                                            break;\n                                        } else {\n                                            break;\n                                        }\n                                    } else if (tri === 0) {\n                                        _tile2.rowIndex = tri;\n                                        this.grids.contents[_ri2][_ci3] = null;\n                                        this.grids.contents[tri][_ci3] = _tile2;\n                                        _tile2.status.moved = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                case 'down':\n                    {\n                        // rowIndex++\n                        // every column allow one merged\n                        var _merged3 = [];\n                        for (var _ci4 = 0, _len5 = this.grids.colLen; _ci4 < _len5; _ci4++) {\n                            _merged3[_ci4] = false;\n                        }\n                        for (var _ri3 = this.grids.contents.length - 2; _ri3 >= 0; _ri3--) {\n                            for (var _ci5 = 0, _len6 = this.grids.contents[_ri3].length; _ci5 < _len6; _ci5++) {\n                                var _tile3 = this.grids.contents[_ri3][_ci5];\n                                if (_tile3 === null) continue;\n                                var _tri = _tile3.rowIndex;\n                                while (++_tri <= this.grids.contents.length - 1) {\n                                    var _preTile3 = this.grids.contents[_tri][_ci5];\n                                    if (_preTile3 !== null) {\n                                        if (_preTile3.value === _tile3.value && _merged3[_ci5] === false) {\n                                            // merged tile into the preTile with the same value\n                                            // update preTile value\n                                            _preTile3.value += _tile3.value;\n                                            this.score += _preTile3.value;\n                                            // remove this tile\n                                            _tile3.element.parentNode.removeChild(_tile3.element);\n                                            this.grids.contents[_ri3][_ci5] = null;\n                                            _preTile3.status.merged = true;\n                                            _merged3[_ci5] = true;\n                                            break;\n                                        } else if (_tile3.rowIndex !== _tri - 1) {\n                                            _tile3.rowIndex = _tri - 1;\n                                            this.grids.contents[_ri3][_ci5] = null;\n                                            this.grids.contents[_tile3.rowIndex][_ci5] = _tile3;\n                                            _tile3.status.moved = true;\n                                            break;\n                                        } else {\n                                            break;\n                                        }\n                                    } else if (_tri === this.grids.contents.length - 1) {\n                                        _tile3.rowIndex = _tri;\n                                        this.grids.contents[_ri3][_ci5] = null;\n                                        this.grids.contents[_tri][_ci5] = _tile3;\n                                        _tile3.status.moved = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                default:\n                    break;\n            }\n        }\n    }, {\n        key: 'newRandomTiles',\n        value: function newRandomTiles() {\n            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            var randomValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [2, 4];\n\n            var newTiles = [];\n            for (var i = 0; i < n; i++) {\n                var emptyGridsPos = this.grids.getEmptyGridsPos();\n                if (emptyGridsPos.length === 0) {\n                    break;\n                }\n\n                var _getRandomItem = (0, _util.getRandomItem)(emptyGridsPos),\n                    _getRandomItem2 = _slicedToArray(_getRandomItem, 2),\n                    rowIndex = _getRandomItem2[0],\n                    colIndex = _getRandomItem2[1];\n\n                var value = (0, _util.getRandomItem)(randomValues);\n                var tile = new Tile(value, rowIndex, colIndex);\n                this.grids.contents[rowIndex][colIndex] = tile;\n                newTiles.push(tile);\n            }\n            return newTiles;\n        }\n    }]);\n\n    return Game;\n}();\n\n/*\nmain\n */\n\nvar game = new Game(document.querySelector('#gameApp'));\ngame.newGame();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/main.js\n");

/***/ }),

/***/ "./node_modules/_art-template@4.12.2@art-template/lib/compile/runtime.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/_art-template@4.12.2@art-template/lib/compile/runtime.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n/*! art-template@runtime | https://github.com/aui/art-template */\n\nvar detectNode = __webpack_require__(/*! detect-node */ \"./node_modules/_detect-node@2.0.3@detect-node/index.js\");\nvar runtime = Object.create(detectNode ? global : window);\nvar ESCAPE_REG = /[\"&'<>]/;\n\n/**\n * 编码模板输出的内容\n * @param  {any}        content\n * @return {string}\n */\nruntime.$escape = function (content) {\n    return xmlEscape(toString(content));\n};\n\n/**\n * 迭代器，支持数组与对象\n * @param {array|Object} data \n * @param {function}     callback \n */\nruntime.$each = function (data, callback) {\n    if (Array.isArray(data)) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            callback(data[i], i);\n        }\n    } else {\n        for (var _i in data) {\n            callback(data[_i], _i);\n        }\n    }\n};\n\n// 将目标转成字符\nfunction toString(value) {\n    if (typeof value !== 'string') {\n        if (value === undefined || value === null) {\n            value = '';\n        } else if (typeof value === 'function') {\n            value = toString(value.call(value));\n        } else {\n            value = JSON.stringify(value);\n        }\n    }\n\n    return value;\n};\n\n// 编码 HTML 内容\nfunction xmlEscape(content) {\n    var html = '' + content;\n    var regexResult = ESCAPE_REG.exec(html);\n    if (!regexResult) {\n        return content;\n    }\n\n    var result = '';\n    var i = void 0,\n        lastIndex = void 0,\n        char = void 0;\n    for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n\n        switch (html.charCodeAt(i)) {\n            case 34:\n                char = '&#34;';\n                break;\n            case 38:\n                char = '&#38;';\n                break;\n            case 39:\n                char = '&#39;';\n                break;\n            case 60:\n                char = '&#60;';\n                break;\n            case 62:\n                char = '&#62;';\n                break;\n            default:\n                continue;\n        }\n\n        if (lastIndex !== i) {\n            result += html.substring(lastIndex, i);\n        }\n\n        lastIndex = i + 1;\n        result += char;\n    }\n\n    if (lastIndex !== i) {\n        return result + html.substring(lastIndex, i);\n    } else {\n        return result;\n    }\n};\n\nmodule.exports = runtime;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../_webpack@4.6.0@webpack/buildin/global.js */ \"./node_modules/_webpack@4.6.0@webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvX2FydC10ZW1wbGF0ZUA0LjEyLjJAYXJ0LXRlbXBsYXRlL2xpYi9jb21waWxlL3J1bnRpbWUuanM/MDU5MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLElBQUk7QUFDaEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxTQUFTO0FBQ25EO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGlCQUFpQjs7QUFFL0Q7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUEseUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvX2FydC10ZW1wbGF0ZUA0LjEyLjJAYXJ0LXRlbXBsYXRlL2xpYi9jb21waWxlL3J1bnRpbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qISBhcnQtdGVtcGxhdGVAcnVudGltZSB8IGh0dHBzOi8vZ2l0aHViLmNvbS9hdWkvYXJ0LXRlbXBsYXRlICovXG5cbnZhciBkZXRlY3ROb2RlID0gcmVxdWlyZSgnZGV0ZWN0LW5vZGUnKTtcbnZhciBydW50aW1lID0gT2JqZWN0LmNyZWF0ZShkZXRlY3ROb2RlID8gZ2xvYmFsIDogd2luZG93KTtcbnZhciBFU0NBUEVfUkVHID0gL1tcIiYnPD5dLztcblxuLyoqXG4gKiDnvJbnoIHmqKHmnb/ovpPlh7rnmoTlhoXlrrlcbiAqIEBwYXJhbSAge2FueX0gICAgICAgIGNvbnRlbnRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xucnVudGltZS4kZXNjYXBlID0gZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgICByZXR1cm4geG1sRXNjYXBlKHRvU3RyaW5nKGNvbnRlbnQpKTtcbn07XG5cbi8qKlxuICog6L+t5Luj5Zmo77yM5pSv5oyB5pWw57uE5LiO5a+56LGhXG4gKiBAcGFyYW0ge2FycmF5fE9iamVjdH0gZGF0YSBcbiAqIEBwYXJhbSB7ZnVuY3Rpb259ICAgICBjYWxsYmFjayBcbiAqL1xucnVudGltZS4kZWFjaCA9IGZ1bmN0aW9uIChkYXRhLCBjYWxsYmFjaykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBkYXRhLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhkYXRhW2ldLCBpKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIF9pIGluIGRhdGEpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKGRhdGFbX2ldLCBfaSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4vLyDlsIbnm67moIfovazmiJDlrZfnrKZcbmZ1bmN0aW9uIHRvU3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRvU3RyaW5nKHZhbHVlLmNhbGwodmFsdWUpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlID0gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xufTtcblxuLy8g57yW56CBIEhUTUwg5YaF5a65XG5mdW5jdGlvbiB4bWxFc2NhcGUoY29udGVudCkge1xuICAgIHZhciBodG1sID0gJycgKyBjb250ZW50O1xuICAgIHZhciByZWdleFJlc3VsdCA9IEVTQ0FQRV9SRUcuZXhlYyhodG1sKTtcbiAgICBpZiAoIXJlZ2V4UmVzdWx0KSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cblxuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgaSA9IHZvaWQgMCxcbiAgICAgICAgbGFzdEluZGV4ID0gdm9pZCAwLFxuICAgICAgICBjaGFyID0gdm9pZCAwO1xuICAgIGZvciAoaSA9IHJlZ2V4UmVzdWx0LmluZGV4LCBsYXN0SW5kZXggPSAwOyBpIDwgaHRtbC5sZW5ndGg7IGkrKykge1xuXG4gICAgICAgIHN3aXRjaCAoaHRtbC5jaGFyQ29kZUF0KGkpKSB7XG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgIGNoYXIgPSAnJiMzNDsnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICBjaGFyID0gJyYjMzg7JztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgY2hhciA9ICcmIzM5Oyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDYwOlxuICAgICAgICAgICAgICAgIGNoYXIgPSAnJiM2MDsnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA2MjpcbiAgICAgICAgICAgICAgICBjaGFyID0gJyYjNjI7JztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGFzdEluZGV4ICE9PSBpKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gaHRtbC5zdWJzdHJpbmcobGFzdEluZGV4LCBpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhc3RJbmRleCA9IGkgKyAxO1xuICAgICAgICByZXN1bHQgKz0gY2hhcjtcbiAgICB9XG5cbiAgICBpZiAobGFzdEluZGV4ICE9PSBpKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQgKyBodG1sLnN1YnN0cmluZyhsYXN0SW5kZXgsIGkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/_art-template@4.12.2@art-template/lib/compile/runtime.js\n");

/***/ }),

/***/ "./node_modules/_art-template@4.12.2@art-template/lib/runtime.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_art-template@4.12.2@art-template/lib/runtime.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./compile/runtime */ \"./node_modules/_art-template@4.12.2@art-template/lib/compile/runtime.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvX2FydC10ZW1wbGF0ZUA0LjEyLjJAYXJ0LXRlbXBsYXRlL2xpYi9ydW50aW1lLmpzPzVmNTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvX2FydC10ZW1wbGF0ZUA0LjEyLjJAYXJ0LXRlbXBsYXRlL2xpYi9ydW50aW1lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY29tcGlsZS9ydW50aW1lJyk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/_art-template@4.12.2@art-template/lib/runtime.js\n");

/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./css/normalize.css":
/*!***********************************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader??ref--5-1!./css/normalize.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js */ \"./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\\n\\n/* Document\\n   ========================================================================== */\\n\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\n\\nhtml {\\n    line-height: 1.15; /* 1 */\\n    -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n\\n/**\\n * Remove the margin in all browsers.\\n */\\n\\nbody {\\n    margin: 0;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\n\\nh1 {\\n    font-size: 2em;\\n    margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\n\\nhr {\\n    box-sizing: content-box; /* 1 */\\n    height: 0; /* 1 */\\n    overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\npre {\\n    font-family: monospace, monospace; /* 1 */\\n    font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\n\\na {\\n    background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\n\\nabbr[title] {\\n    border-bottom: none; /* 1 */\\n    text-decoration: underline; /* 2 */\\n    text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\n\\nb,\\nstrong {\\n    font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\ncode,\\nkbd,\\nsamp {\\n    font-family: monospace, monospace; /* 1 */\\n    font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\n\\nsmall {\\n    font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\n\\nsub,\\nsup {\\n    font-size: 75%;\\n    line-height: 0;\\n    position: relative;\\n    vertical-align: baseline;\\n}\\n\\nsub {\\n    bottom: -0.25em;\\n}\\n\\nsup {\\n    top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\n\\nimg {\\n    border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n    font-family: inherit; /* 1 */\\n    font-size: 100%; /* 1 */\\n    line-height: 1.15; /* 1 */\\n    margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\n\\nbutton,\\ninput { /* 1 */\\n    overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\n\\nbutton,\\nselect { /* 1 */\\n    text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\n\\nbutton,\\n[type=\\\"button\\\"],\\n[type=\\\"reset\\\"],\\n[type=\\\"submit\\\"] {\\n    -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\n\\nbutton::-moz-focus-inner,\\n[type=\\\"button\\\"]::-moz-focus-inner,\\n[type=\\\"reset\\\"]::-moz-focus-inner,\\n[type=\\\"submit\\\"]::-moz-focus-inner {\\n    border-style: none;\\n    padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\n\\nbutton:-moz-focusring,\\n[type=\\\"button\\\"]:-moz-focusring,\\n[type=\\\"reset\\\"]:-moz-focusring,\\n[type=\\\"submit\\\"]:-moz-focusring {\\n    outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\n\\nfieldset {\\n    padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\n\\nlegend {\\n    box-sizing: border-box; /* 1 */\\n    color: inherit; /* 2 */\\n    display: table; /* 1 */\\n    max-width: 100%; /* 1 */\\n    padding: 0; /* 3 */\\n    white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\n\\nprogress {\\n    vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\n\\ntextarea {\\n    overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n\\n[type=\\\"checkbox\\\"],\\n[type=\\\"radio\\\"] {\\n    box-sizing: border-box; /* 1 */\\n    padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n\\n[type=\\\"number\\\"]::-webkit-inner-spin-button,\\n[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n    height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n\\n[type=\\\"search\\\"] {\\n    -webkit-appearance: textfield; /* 1 */\\n    outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n\\n[type=\\\"search\\\"]::-webkit-search-decoration {\\n    -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n\\n::-webkit-file-upload-button {\\n    -webkit-appearance: button; /* 1 */\\n    font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\n\\ndetails {\\n    display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\n\\nsummary {\\n    display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n\\n/**\\n * Add the correct display in IE 10+.\\n */\\n\\ntemplate {\\n    display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n\\n[hidden] {\\n    display: none;\\n}\", \"\", {\"version\":3,\"sources\":[\"/Users/lichong/Sources/2018-contest/css/normalize.css\"],\"names\":[],\"mappings\":\"AAAA,4EAA4E;;AAE5E;gFACgF;;AAEhF;;;GAGG;;AAEH;IACI,kBAAkB,CAAC,OAAO;IAC1B,+BAA+B,CAAC,OAAO;CAC1C;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,UAAU;CACb;;AAED;;;GAGG;;AAEH;IACI,eAAe;IACf,iBAAiB;CACpB;;AAED;gFACgF;;AAEhF;;;GAGG;;AAEH;IACI,wBAAwB,CAAC,OAAO;IAChC,UAAU,CAAC,OAAO;IAClB,kBAAkB,CAAC,OAAO;CAC7B;;AAED;;;GAGG;;AAEH;IACI,kCAAkC,CAAC,OAAO;IAC1C,eAAe,CAAC,OAAO;CAC1B;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,8BAA8B;CACjC;;AAED;;;GAGG;;AAEH;IACI,oBAAoB,CAAC,OAAO;IAC5B,2BAA2B,CAAC,OAAO;IACnC,kCAAkC,CAAC,OAAO;CAC7C;;AAED;;GAEG;;AAEH;;IAEI,oBAAoB;CACvB;;AAED;;;GAGG;;AAEH;;;IAGI,kCAAkC,CAAC,OAAO;IAC1C,eAAe,CAAC,OAAO;CAC1B;;AAED;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;;GAGG;;AAEH;;IAEI,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,yBAAyB;CAC5B;;AAED;IACI,gBAAgB;CACnB;;AAED;IACI,YAAY;CACf;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,mBAAmB;CACtB;;AAED;gFACgF;;AAEhF;;;GAGG;;AAEH;;;;;IAKI,qBAAqB,CAAC,OAAO;IAC7B,gBAAgB,CAAC,OAAO;IACxB,kBAAkB,CAAC,OAAO;IAC1B,UAAU,CAAC,OAAO;CACrB;;AAED;;;GAGG;;AAEH;QACQ,OAAO;IACX,kBAAkB;CACrB;;AAED;;;GAGG;;AAEH;SACS,OAAO;IACZ,qBAAqB;CACxB;;AAED;;GAEG;;AAEH;;;;IAII,2BAA2B;CAC9B;;AAED;;GAEG;;AAEH;;;;IAII,mBAAmB;IACnB,WAAW;CACd;;AAED;;GAEG;;AAEH;;;;IAII,+BAA+B;CAClC;;AAED;;GAEG;;AAEH;IACI,+BAA+B;CAClC;;AAED;;;;;GAKG;;AAEH;IACI,uBAAuB,CAAC,OAAO;IAC/B,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,OAAO;IACvB,gBAAgB,CAAC,OAAO;IACxB,WAAW,CAAC,OAAO;IACnB,oBAAoB,CAAC,OAAO;CAC/B;;AAED;;GAEG;;AAEH;IACI,yBAAyB;CAC5B;;AAED;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;;GAGG;;AAEH;;IAEI,uBAAuB,CAAC,OAAO;IAC/B,WAAW,CAAC,OAAO;CACtB;;AAED;;GAEG;;AAEH;;IAEI,aAAa;CAChB;;AAED;;;GAGG;;AAEH;IACI,8BAA8B,CAAC,OAAO;IACtC,qBAAqB,CAAC,OAAO;CAChC;;AAED;;GAEG;;AAEH;IACI,yBAAyB;CAC5B;;AAED;;;GAGG;;AAEH;IACI,2BAA2B,CAAC,OAAO;IACnC,cAAc,CAAC,OAAO;CACzB;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;GAEG;;AAEH;IACI,mBAAmB;CACtB;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,cAAc;CACjB;;AAED;;GAEG;;AAEH;IACI,cAAc;CACjB\",\"file\":\"normalize.css\",\"sourcesContent\":[\"/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\\n\\n/* Document\\n   ========================================================================== */\\n\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\n\\nhtml {\\n    line-height: 1.15; /* 1 */\\n    -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n\\n/**\\n * Remove the margin in all browsers.\\n */\\n\\nbody {\\n    margin: 0;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\n\\nh1 {\\n    font-size: 2em;\\n    margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\n\\nhr {\\n    box-sizing: content-box; /* 1 */\\n    height: 0; /* 1 */\\n    overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\npre {\\n    font-family: monospace, monospace; /* 1 */\\n    font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\n\\na {\\n    background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\n\\nabbr[title] {\\n    border-bottom: none; /* 1 */\\n    text-decoration: underline; /* 2 */\\n    text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\n\\nb,\\nstrong {\\n    font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\ncode,\\nkbd,\\nsamp {\\n    font-family: monospace, monospace; /* 1 */\\n    font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\n\\nsmall {\\n    font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\n\\nsub,\\nsup {\\n    font-size: 75%;\\n    line-height: 0;\\n    position: relative;\\n    vertical-align: baseline;\\n}\\n\\nsub {\\n    bottom: -0.25em;\\n}\\n\\nsup {\\n    top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\n\\nimg {\\n    border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n    font-family: inherit; /* 1 */\\n    font-size: 100%; /* 1 */\\n    line-height: 1.15; /* 1 */\\n    margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\n\\nbutton,\\ninput { /* 1 */\\n    overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\n\\nbutton,\\nselect { /* 1 */\\n    text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\n\\nbutton,\\n[type=\\\"button\\\"],\\n[type=\\\"reset\\\"],\\n[type=\\\"submit\\\"] {\\n    -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\n\\nbutton::-moz-focus-inner,\\n[type=\\\"button\\\"]::-moz-focus-inner,\\n[type=\\\"reset\\\"]::-moz-focus-inner,\\n[type=\\\"submit\\\"]::-moz-focus-inner {\\n    border-style: none;\\n    padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\n\\nbutton:-moz-focusring,\\n[type=\\\"button\\\"]:-moz-focusring,\\n[type=\\\"reset\\\"]:-moz-focusring,\\n[type=\\\"submit\\\"]:-moz-focusring {\\n    outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\n\\nfieldset {\\n    padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\n\\nlegend {\\n    box-sizing: border-box; /* 1 */\\n    color: inherit; /* 2 */\\n    display: table; /* 1 */\\n    max-width: 100%; /* 1 */\\n    padding: 0; /* 3 */\\n    white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\n\\nprogress {\\n    vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\n\\ntextarea {\\n    overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n\\n[type=\\\"checkbox\\\"],\\n[type=\\\"radio\\\"] {\\n    box-sizing: border-box; /* 1 */\\n    padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n\\n[type=\\\"number\\\"]::-webkit-inner-spin-button,\\n[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n    height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n\\n[type=\\\"search\\\"] {\\n    -webkit-appearance: textfield; /* 1 */\\n    outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n\\n[type=\\\"search\\\"]::-webkit-search-decoration {\\n    -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n\\n::-webkit-file-upload-button {\\n    -webkit-appearance: button; /* 1 */\\n    font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\n\\ndetails {\\n    display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\n\\nsummary {\\n    display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n\\n/**\\n * Add the correct display in IE 10+.\\n */\\n\\ntemplate {\\n    display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n\\n[hidden] {\\n    display: none;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./css/normalize.css\n");

/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./node_modules/_px2rem-loader@0.1.9@px2rem-loader/index.js??ref--5-2!./css/main.css":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader??ref--5-1!./node_modules/_px2rem-loader@0.1.9@px2rem-loader??ref--5-2!./css/main.css ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js */ \"./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(true);\n// imports\nexports.i(__webpack_require__(/*! -!../node_modules/_css-loader@0.28.11@css-loader??ref--5-1!./normalize.css */ \"./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./css/normalize.css\"), \"\");\n\n// module\nexports.push([module.i, \"body {\\n  margin: 0.13333333rem 0;\\n}\\n\\n.game-container {\\n  width: 8.13333333rem;\\n  margin: 0 auto;\\n}\\n\\n.game-header {\\n  height: 1.06666667rem;\\n  color: #fff;\\n  font: 0.32rem/0.4rem Arial;\\n}\\n\\n.game-header:after {\\n  content: '';\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: table;\\n  clear: both;\\n}\\n\\n.game-title {\\n  float: left;\\n  margin: 0;\\n  color: #776e65;\\n  font: bold 1.06666667rem/1.06666667rem Arial;\\n}\\n\\n.game-score-box,\\n.game-best-score-box {\\n  float: right;\\n  width: 1.33333333rem;\\n  height: 0.8rem;\\n  list-style: none;\\n  margin: 0.13333333rem 0.01333333rem;\\n  padding: 0;\\n  text-align: center;\\n  -webkit-border-radius: 0.04rem;\\n  border-radius: 0.04rem;\\n  background-color: #b9ada1;\\n}\\n\\n.new-game {\\n  float: right;\\n  width: 1.73333333rem;\\n  height: 0.8rem;\\n  margin: 0.13333333rem 0.01333333rem;\\n  text-align: center;\\n  color: #fff;\\n  -webkit-border-radius: 0.04rem;\\n  border-radius: 0.04rem;\\n  background-color: #8f7a66;\\n  cursor: pointer;\\n}\\n\\n.game-wrapper {\\n  position: relative;\\n}\\n\\n.game-overlay {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 2;\\n  background-color: rgba(255,255,255,0.4);\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: none;\\n  text-align: center;\\n}\\n\\n.game-result {\\n  margin-top: 30%;\\n  font: bold 0.8rem/0.8rem Arial;\\n}\\n\\n.game-result.lose {\\n  color: #766e66;\\n}\\n\\n.game-result.win {\\n  color: #e7c24f;\\n}\\n\\n.game-retry {\\n  width: 3.06666667rem;\\n  height: 0.64rem;\\n  font: 0.32rem/0.64rem Arial;\\n  color: #f9f6f2;\\n  background-color: #8c7a68;\\n  cursor: pointer;\\n}\\n\\n.grids-container {\\n  background-color: #cdc0b4;\\n}\\n\\n.grids-row {\\n  font-size: 0;\\n}\\n\\n.grids-cell {\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: inline-block;\\n  width: 1.86666667rem;\\n  height: 1.86666667rem;\\n  border: 0.13333333rem solid #bbada0;\\n  margin: 0;\\n  padding: 0;\\n  margin-right: -0.13333333rem;\\n  margin-bottom: -0.13333333rem;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.tile {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 1;\\n  width: 1.86666667rem;\\n  height: 1.86666667rem;\\n  -webkit-transition: transform 0.1s ease-in-out;\\n  -moz-transition: transform 0.1s ease-in-out;\\n  -ms-transition: transform 0.1s ease-in-out;\\n  transition: transform 0.1s ease-in-out;\\n}\\n\\n.tile-0-0 {\\n  -webkit-transform: translate(0.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 0.13333333rem);\\n  transform: translate(0.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-1 {\\n  -webkit-transform: translate(2.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 0.13333333rem);\\n  transform: translate(2.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-2 {\\n  -webkit-transform: translate(4.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 0.13333333rem);\\n  transform: translate(4.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-3 {\\n  -webkit-transform: translate(6.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 0.13333333rem);\\n  transform: translate(6.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-1-0 {\\n  -webkit-transform: translate(0.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 2.13333333rem);\\n  transform: translate(0.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-1 {\\n  -webkit-transform: translate(2.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 2.13333333rem);\\n  transform: translate(2.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-2 {\\n  -webkit-transform: translate(4.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 2.13333333rem);\\n  transform: translate(4.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-3 {\\n  -webkit-transform: translate(6.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 2.13333333rem);\\n  transform: translate(6.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-2-0 {\\n  -webkit-transform: translate(0.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 4.13333333rem);\\n  transform: translate(0.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-1 {\\n  -webkit-transform: translate(2.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 4.13333333rem);\\n  transform: translate(2.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-2 {\\n  -webkit-transform: translate(4.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 4.13333333rem);\\n  transform: translate(4.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-3 {\\n  -webkit-transform: translate(6.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 4.13333333rem);\\n  transform: translate(6.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-3-0 {\\n  -webkit-transform: translate(0.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 6.13333333rem);\\n  transform: translate(0.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-1 {\\n  -webkit-transform: translate(2.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 6.13333333rem);\\n  transform: translate(2.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-2 {\\n  -webkit-transform: translate(4.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 6.13333333rem);\\n  transform: translate(4.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-3 {\\n  -webkit-transform: translate(6.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 6.13333333rem);\\n  transform: translate(6.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-inner {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  text-align: center;\\n  line-height: 1.73333333rem;\\n  font-size: 0.74666667rem;\\n  font-weight: bold;\\n  font-family: \\\"Helvetica Neue\\\", Arial, sans-serif;\\n}\\n\\n.tile-new>.tile-inner {\\n  -webkit-animation: appear 0.25s ease 0.15s backwards;\\n  -moz-animation: appear 0.25s ease 0.15s backwards;\\n  -ms-animation: appear 0.25s ease 0.15s backwards;\\n  animation: appear 0.25s ease 0.15s backwards;\\n}\\n\\n.tile-merged>.tile-inner {\\n  -webkit-animation: pop 0.2s ease 0.1s backwards;\\n  -moz-animation: pop 0.2s ease 0.1s backwards;\\n  -ms-animation: pop 0.2s ease 0.1s backwards;\\n  animation: pop 0.2s ease 0.1s backwards;\\n}\\n\\n.tile-value-2 {\\n  color: #766e66;\\n  background-color: #ede4db;\\n}\\n\\n.tile-value-4 {\\n  color: #766e66;\\n  background-color: #ebe0cb;\\n}\\n\\n.tile-value-8 {\\n  color: #f9f6f2;\\n  background-color: #e9b381;\\n}\\n\\n.tile-value-16 {\\n  color: #f9f6f2;\\n  background-color: #e99c6c;\\n}\\n\\n.tile-value-32 {\\n  color: #f9f6f2;\\n  background-color: #e88267;\\n}\\n\\n.tile-value-64 {\\n  color: #f9f6f2;\\n  background-color: #e66747;\\n}\\n\\n.tile-value-128 {\\n  color: #f9f6f2;\\n  background-color: #e9cf7f;\\n}\\n\\n.tile-value-256 {\\n  color: #f9f6f2;\\n  background-color: #e9cc72;\\n}\\n\\n.tile-value-512 {\\n  color: #f9f6f2;\\n  background-color: #edc850;\\n}\\n\\n.tile-value-1024 {\\n  color: #f9f6f2;\\n  background-color: #edc53f;\\n}\\n\\n.tile-value-2048 {\\n  color: #f9f6f2;\\n  background-color: #edc22e;\\n}\\n\\n@-moz-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-webkit-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-o-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-moz-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-webkit-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-o-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\", \"\", {\"version\":3,\"sources\":[\"/Users/lichong/Sources/2018-contest/css/main.css\"],\"names\":[],\"mappings\":\"AAEA;EACE,wBAAwB;CACzB;;AAED;EACE,qBAAqB;EACrB,eAAe;CAChB;;AAED;EACE,sBAAsB;EACtB,YAAY;EACZ,2BAA2B;CAC5B;;AAED;EACE,YAAY;EACZ,sBAAsB;EACtB,mBAAmB;EACnB,eAAe;EACf,YAAY;CACb;;AAED;EACE,YAAY;EACZ,UAAU;EACV,eAAe;EACf,6CAA6C;CAC9C;;AAED;;EAEE,aAAa;EACb,qBAAqB;EACrB,eAAe;EACf,iBAAiB;EACjB,oCAAoC;EACpC,WAAW;EACX,mBAAmB;EACnB,+BAA+B;EAC/B,uBAAuB;EACvB,0BAA0B;CAC3B;;AAED;EACE,aAAa;EACb,qBAAqB;EACrB,eAAe;EACf,oCAAoC;EACpC,mBAAmB;EACnB,YAAY;EACZ,+BAA+B;EAC/B,uBAAuB;EACvB,0BAA0B;EAC1B,gBAAgB;CACjB;;AAED;EACE,mBAAmB;CACpB;;AAED;EACE,mBAAmB;EACnB,QAAQ;EACR,SAAS;EACT,OAAO;EACP,UAAU;EACV,WAAW;EACX,wCAAwC;EACxC,sBAAsB;EACtB,mBAAmB;EACnB,cAAc;EACd,mBAAmB;CACpB;;AAED;EACE,gBAAgB;EAChB,+BAA+B;CAChC;;AAED;EACE,eAAe;CAChB;;AAED;EACE,eAAe;CAChB;;AAED;EACE,qBAAqB;EACrB,gBAAgB;EAChB,4BAA4B;EAC5B,eAAe;EACf,0BAA0B;EAC1B,gBAAgB;CACjB;;AAED;EACE,0BAA0B;CAC3B;;AAED;EACE,aAAa;CACd;;AAED;EACE,sBAAsB;EACtB,mBAAmB;EACnB,sBAAsB;EACtB,qBAAqB;EACrB,sBAAsB;EACtB,oCAAoC;EACpC,UAAU;EACV,WAAW;EACX,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;EACnB,uBAAuB;CACxB;;AAED;EACE,mBAAmB;EACnB,QAAQ;EACR,OAAO;EACP,WAAW;EACX,qBAAqB;EACrB,sBAAsB;EACtB,+CAA+C;EAC/C,4CAA4C;EAC5C,2CAA2C;EAC3C,uCAAuC;CACxC;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,2DAA2D;EAC3D,wDAAwD;EACxD,uDAAuD;EACvD,mDAAmD;CACpD;;AAED;EACE,mBAAmB;EACnB,QAAQ;EACR,SAAS;EACT,OAAO;EACP,UAAU;EACV,mBAAmB;EACnB,2BAA2B;EAC3B,yBAAyB;EACzB,kBAAkB;EAClB,iDAAiD;CAClD;;AAED;EACE,qDAAqD;EACrD,kDAAkD;EAClD,iDAAiD;EACjD,6CAA6C;CAC9C;;AAED;EACE,gDAAgD;EAChD,6CAA6C;EAC7C,4CAA4C;EAC5C,wCAAwC;CACzC;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE,eAAe;EACf,0BAA0B;CAC3B;;AAED;EACE;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,yBAAyB;IACzB,iEAAiE;IACjE,mBAAmB;GACpB;;EAED;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,yBAAyB;IACzB,iEAAiE;IACjE,mBAAmB;GACpB;;EAED;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,yBAAyB;IACzB,iEAAiE;IACjE,mBAAmB;GACpB;;EAED;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,yBAAyB;IACzB,iEAAiE;IACjE,mBAAmB;GACpB;;EAED;IACE,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;;EAED;IACE,8BAA8B;IAC9B,2BAA2B;IAC3B,0BAA0B;IAC1B,sBAAsB;GACvB;;EAED;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;;EAED;IACE,8BAA8B;IAC9B,2BAA2B;IAC3B,0BAA0B;IAC1B,sBAAsB;GACvB;;EAED;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;;EAED;IACE,8BAA8B;IAC9B,2BAA2B;IAC3B,0BAA0B;IAC1B,sBAAsB;GACvB;;EAED;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF;;AAED;EACE;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;;EAED;IACE,8BAA8B;IAC9B,2BAA2B;IAC3B,0BAA0B;IAC1B,sBAAsB;GACvB;;EAED;IACE,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,oBAAoB;GACrB;CACF\",\"file\":\"main.css\",\"sourcesContent\":[\"@import \\\"normalize.css\\\";\\n\\nbody {\\n  margin: 0.13333333rem 0;\\n}\\n\\n.game-container {\\n  width: 8.13333333rem;\\n  margin: 0 auto;\\n}\\n\\n.game-header {\\n  height: 1.06666667rem;\\n  color: #fff;\\n  font: 0.32rem/0.4rem Arial;\\n}\\n\\n.game-header:after {\\n  content: '';\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: table;\\n  clear: both;\\n}\\n\\n.game-title {\\n  float: left;\\n  margin: 0;\\n  color: #776e65;\\n  font: bold 1.06666667rem/1.06666667rem Arial;\\n}\\n\\n.game-score-box,\\n.game-best-score-box {\\n  float: right;\\n  width: 1.33333333rem;\\n  height: 0.8rem;\\n  list-style: none;\\n  margin: 0.13333333rem 0.01333333rem;\\n  padding: 0;\\n  text-align: center;\\n  -webkit-border-radius: 0.04rem;\\n  border-radius: 0.04rem;\\n  background-color: #b9ada1;\\n}\\n\\n.new-game {\\n  float: right;\\n  width: 1.73333333rem;\\n  height: 0.8rem;\\n  margin: 0.13333333rem 0.01333333rem;\\n  text-align: center;\\n  color: #fff;\\n  -webkit-border-radius: 0.04rem;\\n  border-radius: 0.04rem;\\n  background-color: #8f7a66;\\n  cursor: pointer;\\n}\\n\\n.game-wrapper {\\n  position: relative;\\n}\\n\\n.game-overlay {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 2;\\n  background-color: rgba(255,255,255,0.4);\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: none;\\n  text-align: center;\\n}\\n\\n.game-result {\\n  margin-top: 30%;\\n  font: bold 0.8rem/0.8rem Arial;\\n}\\n\\n.game-result.lose {\\n  color: #766e66;\\n}\\n\\n.game-result.win {\\n  color: #e7c24f;\\n}\\n\\n.game-retry {\\n  width: 3.06666667rem;\\n  height: 0.64rem;\\n  font: 0.32rem/0.64rem Arial;\\n  color: #f9f6f2;\\n  background-color: #8c7a68;\\n  cursor: pointer;\\n}\\n\\n.grids-container {\\n  background-color: #cdc0b4;\\n}\\n\\n.grids-row {\\n  font-size: 0;\\n}\\n\\n.grids-cell {\\n  display: -webkit-box ;\\n  display: -moz-box ;\\n  display: inline-block;\\n  width: 1.86666667rem;\\n  height: 1.86666667rem;\\n  border: 0.13333333rem solid #bbada0;\\n  margin: 0;\\n  padding: 0;\\n  margin-right: -0.13333333rem;\\n  margin-bottom: -0.13333333rem;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.tile {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 1;\\n  width: 1.86666667rem;\\n  height: 1.86666667rem;\\n  -webkit-transition: transform 0.1s ease-in-out;\\n  -moz-transition: transform 0.1s ease-in-out;\\n  -ms-transition: transform 0.1s ease-in-out;\\n  transition: transform 0.1s ease-in-out;\\n}\\n\\n.tile-0-0 {\\n  -webkit-transform: translate(0.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 0.13333333rem);\\n  transform: translate(0.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-1 {\\n  -webkit-transform: translate(2.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 0.13333333rem);\\n  transform: translate(2.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-2 {\\n  -webkit-transform: translate(4.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 0.13333333rem);\\n  transform: translate(4.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-0-3 {\\n  -webkit-transform: translate(6.13333333rem, 0.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 0.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 0.13333333rem);\\n  transform: translate(6.13333333rem, 0.13333333rem);\\n}\\n\\n.tile-1-0 {\\n  -webkit-transform: translate(0.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 2.13333333rem);\\n  transform: translate(0.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-1 {\\n  -webkit-transform: translate(2.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 2.13333333rem);\\n  transform: translate(2.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-2 {\\n  -webkit-transform: translate(4.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 2.13333333rem);\\n  transform: translate(4.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-1-3 {\\n  -webkit-transform: translate(6.13333333rem, 2.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 2.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 2.13333333rem);\\n  transform: translate(6.13333333rem, 2.13333333rem);\\n}\\n\\n.tile-2-0 {\\n  -webkit-transform: translate(0.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 4.13333333rem);\\n  transform: translate(0.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-1 {\\n  -webkit-transform: translate(2.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 4.13333333rem);\\n  transform: translate(2.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-2 {\\n  -webkit-transform: translate(4.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 4.13333333rem);\\n  transform: translate(4.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-2-3 {\\n  -webkit-transform: translate(6.13333333rem, 4.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 4.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 4.13333333rem);\\n  transform: translate(6.13333333rem, 4.13333333rem);\\n}\\n\\n.tile-3-0 {\\n  -webkit-transform: translate(0.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(0.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(0.13333333rem, 6.13333333rem);\\n  transform: translate(0.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-1 {\\n  -webkit-transform: translate(2.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(2.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(2.13333333rem, 6.13333333rem);\\n  transform: translate(2.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-2 {\\n  -webkit-transform: translate(4.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(4.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(4.13333333rem, 6.13333333rem);\\n  transform: translate(4.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-3-3 {\\n  -webkit-transform: translate(6.13333333rem, 6.13333333rem);\\n  -moz-transform: translate(6.13333333rem, 6.13333333rem);\\n  -ms-transform: translate(6.13333333rem, 6.13333333rem);\\n  transform: translate(6.13333333rem, 6.13333333rem);\\n}\\n\\n.tile-inner {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  text-align: center;\\n  line-height: 1.73333333rem;\\n  font-size: 0.74666667rem;\\n  font-weight: bold;\\n  font-family: \\\"Helvetica Neue\\\", Arial, sans-serif;\\n}\\n\\n.tile-new>.tile-inner {\\n  -webkit-animation: appear 0.25s ease 0.15s backwards;\\n  -moz-animation: appear 0.25s ease 0.15s backwards;\\n  -ms-animation: appear 0.25s ease 0.15s backwards;\\n  animation: appear 0.25s ease 0.15s backwards;\\n}\\n\\n.tile-merged>.tile-inner {\\n  -webkit-animation: pop 0.2s ease 0.1s backwards;\\n  -moz-animation: pop 0.2s ease 0.1s backwards;\\n  -ms-animation: pop 0.2s ease 0.1s backwards;\\n  animation: pop 0.2s ease 0.1s backwards;\\n}\\n\\n.tile-value-2 {\\n  color: #766e66;\\n  background-color: #ede4db;\\n}\\n\\n.tile-value-4 {\\n  color: #766e66;\\n  background-color: #ebe0cb;\\n}\\n\\n.tile-value-8 {\\n  color: #f9f6f2;\\n  background-color: #e9b381;\\n}\\n\\n.tile-value-16 {\\n  color: #f9f6f2;\\n  background-color: #e99c6c;\\n}\\n\\n.tile-value-32 {\\n  color: #f9f6f2;\\n  background-color: #e88267;\\n}\\n\\n.tile-value-64 {\\n  color: #f9f6f2;\\n  background-color: #e66747;\\n}\\n\\n.tile-value-128 {\\n  color: #f9f6f2;\\n  background-color: #e9cf7f;\\n}\\n\\n.tile-value-256 {\\n  color: #f9f6f2;\\n  background-color: #e9cc72;\\n}\\n\\n.tile-value-512 {\\n  color: #f9f6f2;\\n  background-color: #edc850;\\n}\\n\\n.tile-value-1024 {\\n  color: #f9f6f2;\\n  background-color: #edc53f;\\n}\\n\\n.tile-value-2048 {\\n  color: #f9f6f2;\\n  background-color: #edc22e;\\n}\\n\\n@-moz-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-webkit-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-o-keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes appear {\\n  0% {\\n    -webkit-opacity: 0;\\n    -moz-opacity: 0;\\n    opacity: 0;\\n    filter: alpha(opacity=0);\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\\\";\\n    tranform: scale(0);\\n  }\\n\\n  100% {\\n    -webkit-opacity: 1;\\n    -moz-opacity: 1;\\n    opacity: 1;\\n    -ms-filter: none;\\n    filter: none;\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-moz-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-webkit-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@-o-keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes pop {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n\\n  50% {\\n    -webkit-transform: scale(1.2);\\n    -moz-transform: scale(1.2);\\n    -ms-transform: scale(1.2);\\n    transform: scale(1.2);\\n  }\\n\\n  100% {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--5-1!./node_modules/_px2rem-loader@0.1.9@px2rem-loader/index.js??ref--5-2!./css/main.css\n");

/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcz85NWJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25ELElBQUk7QUFDSjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGNBQWM7O0FBRWxFO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\n");

/***/ }),

/***/ "./node_modules/_detect-node@2.0.3@detect-node/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/_detect-node@2.0.3@detect-node/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = false;\n\n// Only Node.JS has a process variable that is of [[Class]] process\ntry {\n module.exports = Object.prototype.toString.call(global.process) === '[object process]' \n} catch(e) {}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../_webpack@4.6.0@webpack/buildin/global.js */ \"./node_modules/_webpack@4.6.0@webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvX2RldGVjdC1ub2RlQDIuMC4zQGRldGVjdC1ub2RlL2luZGV4LmpzP2IzZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9fZGV0ZWN0LW5vZGVAMi4wLjNAZGV0ZWN0LW5vZGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xuXG4vLyBPbmx5IE5vZGUuSlMgaGFzIGEgcHJvY2VzcyB2YXJpYWJsZSB0aGF0IGlzIG9mIFtbQ2xhc3NdXSBwcm9jZXNzXG50cnkge1xuIG1vZHVsZS5leHBvcnRzID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nIFxufSBjYXRjaChlKSB7fVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/_detect-node@2.0.3@detect-node/index.js\n");

/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js\n");

/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js":
/*!********************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvX3N0eWxlLWxvYWRlckAwLjIxLjBAc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzPzU2OWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9fc3R5bGUtbG9hZGVyQDAuMjEuMEBzdHlsZS1sb2FkZXIvbGliL3VybHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js\n");

/***/ }),

/***/ "./node_modules/_webpack@4.6.0@webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL193ZWJwYWNrQDQuNi4wQHdlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/_webpack@4.6.0@webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/_webpack@4.6.0@webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL193ZWJwYWNrQDQuNi4wQHdlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/_webpack@4.6.0@webpack/buildin/module.js\n");

/***/ }),

/***/ "./templates/game.art":
/*!****************************!*\
  !*** ./templates/game.art ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $imports = __webpack_require__(/*! ../node_modules/_art-template@4.12.2@art-template/lib/runtime.js */ \"./node_modules/_art-template@4.12.2@art-template/lib/runtime.js\");\nmodule.exports = function ($data) {\n    'use strict';\n    $data = $data || {};\n    var $$out = '', $$blocks = arguments[1] || {}, include = function (content) {\n            $$out += content;\n            return $$out;\n        };\n    $$out += '<section class=\"game-container\">\\n    <header class=\"game-header\">\\n        <h2 class=\"game-title\">2048</h2>\\n        <button class=\"new-game\">NEW GAME</button>\\n        <ul class=\"game-best-score-box\">\\n            <li>BEST</li>\\n            <li class=\"game-best-score\">0</li>\\n        </ul>\\n        <ul class=\"game-score-box\">\\n            <li>SCORE</li>\\n            <li class=\"game-score\">0</li>\\n        </ul>\\n    </header>\\n    <div class=\"game-wrapper\">\\n        <div class=\"grids-container\">';\n    include(__webpack_require__(/*! ./grids.art */ \"./templates/grids.art\")($data));\n    $$out += '</div>\\n        <div class=\"tiles-container\"></div>\\n        <div class=\"game-overlay\">\\n            <p class=\"game-result lose\">Game Over!</p>\\n            <button class=\"game-retry\">Play again</button>\\n        </div>\\n    </div>\\n</section>\\n';\n    return $$out;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZW1wbGF0ZXMvZ2FtZS5hcnQ/MjA0YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O1VBQUM7b0JBY3FDOytCQUE0QiIsImZpbGUiOiIuL3RlbXBsYXRlcy9nYW1lLmFydC5qcyIsInNvdXJjZXNDb250ZW50IjpbIjxzZWN0aW9uIGNsYXNzPVwiZ2FtZS1jb250YWluZXJcIj5cbiAgICA8aGVhZGVyIGNsYXNzPVwiZ2FtZS1oZWFkZXJcIj5cbiAgICAgICAgPGgyIGNsYXNzPVwiZ2FtZS10aXRsZVwiPjIwNDg8L2gyPlxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwibmV3LWdhbWVcIj5ORVcgR0FNRTwvYnV0dG9uPlxuICAgICAgICA8dWwgY2xhc3M9XCJnYW1lLWJlc3Qtc2NvcmUtYm94XCI+XG4gICAgICAgICAgICA8bGk+QkVTVDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJnYW1lLWJlc3Qtc2NvcmVcIj4wPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHVsIGNsYXNzPVwiZ2FtZS1zY29yZS1ib3hcIj5cbiAgICAgICAgICAgIDxsaT5TQ09SRTwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJnYW1lLXNjb3JlXCI+MDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgPC9oZWFkZXI+XG4gICAgPGRpdiBjbGFzcz1cImdhbWUtd3JhcHBlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY29udGFpbmVyXCI+PCUgaW5jbHVkZSgnLi9ncmlkcy5hcnQnKSAlPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGlsZXMtY29udGFpbmVyXCI+PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJnYW1lLW92ZXJsYXlcIj5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiZ2FtZS1yZXN1bHQgbG9zZVwiPkdhbWUgT3ZlciE8L3A+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZ2FtZS1yZXRyeVwiPlBsYXkgYWdhaW48L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L3NlY3Rpb24+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./templates/game.art\n");

/***/ }),

/***/ "./templates/grids.art":
/*!*****************************!*\
  !*** ./templates/grids.art ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $imports = __webpack_require__(/*! ../node_modules/_art-template@4.12.2@art-template/lib/runtime.js */ \"./node_modules/_art-template@4.12.2@art-template/lib/runtime.js\");\nmodule.exports = function ($data) {\n    'use strict';\n    $data = $data || {};\n    var $$out = '';\n    $$out += '<div class=\"grids-row\">\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n</div>\\n<div class=\"grids-row\">\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n</div>\\n<div class=\"grids-row\">\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n</div>\\n<div class=\"grids-row\">\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n    <div class=\"grids-cell\"></div>\\n</div>';\n    return $$out;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZW1wbGF0ZXMvZ3JpZHMuYXJ0PzczZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OzthQUFDIiwiZmlsZSI6Ii4vdGVtcGxhdGVzL2dyaWRzLmFydC5qcyIsInNvdXJjZXNDb250ZW50IjpbIjxkaXYgY2xhc3M9XCJncmlkcy1yb3dcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJncmlkcy1jZWxsXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImdyaWRzLWNlbGxcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwiZ3JpZHMtcm93XCI+XG4gICAgPGRpdiBjbGFzcz1cImdyaWRzLWNlbGxcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJncmlkcy1jZWxsXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImdyaWRzLWNlbGxcIj48L2Rpdj5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cImdyaWRzLXJvd1wiPlxuICAgIDxkaXYgY2xhc3M9XCJncmlkcy1jZWxsXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImdyaWRzLWNlbGxcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJncmlkcy1jZWxsXCI+PC9kaXY+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJncmlkcy1yb3dcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJncmlkcy1jZWxsXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImdyaWRzLWNlbGxcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZHMtY2VsbFwiPjwvZGl2PlxuPC9kaXY+Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./templates/grids.art\n");

/***/ })

/******/ });