/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./css/main.styl":
/*!***********************!*\
  !*** ./css/main.styl ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/_css-loader@0.28.11@css-loader??ref--6-1!../node_modules/_stylus-loader@3.0.2@stylus-loader!./main.styl */ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--6-1!./node_modules/_stylus-loader@3.0.2@stylus-loader/index.js!./css/main.styl");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"sourceMap":true,"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js */ "./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(/*! ../css/main.styl */ "./css/main.styl");

var _util = __webpack_require__(/*! ./util.js */ "./js/util.js");

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

'use strict';

var TEMPLATES = {
    game: '<section class="game-container">\n    <header class="game-header">\n        <h2 class="game-title">2048</h2>\n        <button class="new-game">NEW GAME</button>\n        <ul class="game-best-score-box">\n            <li>BEST</li>\n            <li class="game-best-score">0</li>\n        </ul>\n        <ul class="game-score-box">\n            <li>SCORE</li>\n            <li class="game-score">0</li>\n        </ul>\n    </header>\n    <div class="game-wrapper">\n        <table class="grids-table">\n            <tbody class="grids-container">\n            </tbody>\n        </table>\n        <div class="tiles-container"></div>\n        <div class="game-overlay">\n            <p class="game-result lose">Game Over!</p>\n            <button class="game-retry">Play again</button>\n        </div>\n    </div>\n</section>'

};

var SETTINGS = {
    rowLen: 4,
    colLen: 4,
    target: 2048
};

var Grids = function () {
    function Grids(el) {
        _classCallCheck(this, Grids);

        this.container = el;
        this.rowLen = SETTINGS.rowLen;
        this.colLen = SETTINGS.colLen;
        // grid content
        this.contents = [];
        // init contents
        this.clearContents();
        this.render();
    }

    _createClass(Grids, [{
        key: 'render',
        value: function render() {
            // render HTML, iterate to generate tbody content
            var s = '';
            for (var ri = 0; ri < this.rowLen; ri++) {
                s += '<tr>';
                for (var ci = 0; ci < this.colLen; ci++) {
                    s += '<td></td>';
                }
                s += '</tr>';
            }
            this.container.innerHTML = s;
        }
    }, {
        key: 'clearContents',
        value: function clearContents() {
            for (var ri = 0; ri < this.rowLen; ri++) {
                this.contents[ri] = [];
                for (var ci = 0; ci < this.colLen; ci++) {
                    this.contents[ri][ci] = null;
                }
            }
        }
    }, {
        key: 'forEachContent',
        value: function forEachContent(rowCallback, colCallback) {
            for (var ri = 0; ri < this.rowLen; ri++) {
                if (typeof rowCallback === 'function') {
                    // cb(item, index, array)
                    rowCallback(this.contents[ri], ri, this.contents);
                }
                for (var ci = 0; ci < this.colLen; ci++) {
                    if (typeof colCallback === 'function') {
                        // cb(item, index, array)
                        colCallback(this.contents[ri][ci], ci, this.contents);
                    }
                }
            }
        }
    }, {
        key: 'getEmptyGridsPos',
        value: function getEmptyGridsPos() {
            var arr = [];
            for (var ri = 0; ri < this.rowLen; ri++) {
                for (var ci = 0; ci < this.colLen; ci++) {
                    if (this.contents[ri][ci] === null) {
                        arr.push([ri, ci]);
                    }
                }
            }
            return arr;
        }
    }]);

    return Grids;
}();

var Tile = function () {
    function Tile() {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;
        var rowIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var colIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

        _classCallCheck(this, Tile);

        if (Tile.tilesContainer === undefined) {
            throw new Error('Tile must be assigned a container in Tils.tilesContainer');
        }
        this.container = Tile.tilesContainer;
        this.status = {
            merged: false,
            moved: false,
            new: true
        };

        var _render = this.render(rowIndex, colIndex, value),
            _render2 = _slicedToArray(_render, 2),
            outer = _render2[0],
            inner = _render2[1];

        this.element = outer;
        this.innerEl = inner;
        // init value
        this._value = value;
        this._rowIndex = rowIndex;
        this._colIndex = colIndex;
    }

    _createClass(Tile, [{
        key: 'render',
        value: function render(rowIndex, colIndex, value) {
            var div = document.createElement('div');
            div.className = 'tile tile-' + rowIndex + '-' + colIndex + ' tile-new';
            var inner = document.createElement('div');
            inner.className = 'tile-inner tile-value-' + value;
            inner.innerText = value;
            div.appendChild(inner);
            this.container.appendChild(div);
            this.status.new = true;
            return [div, inner];
        }
    }, {
        key: 'resetStatus',
        value: function resetStatus() {
            this.status.moved = false;
            this.status.merged = false;
            this.status.new = false;
            this.element.className = this.element.className.replace('tile-merged', '');
            this.element.className = this.element.className.replace('tile-new', '');
        }
    }, {
        key: 'value',
        set: function set(value) {
            var _this = this;

            var oldValue = this._value;
            this._value = value;
            this.innerEl.innerText = value;
            this.innerEl.className = this.innerEl.className.replace(/tile-value-(\d+)/, 'tile-value-' + value);
            // only merge action can change value
            this.element.className += ' tile-merged';
            // flag isMerges
            this.status.merged = true;
            // emit events
            var cbs = Tile.events['tileValueChanged'];
            if (cbs !== undefined) {
                cbs.forEach(function (cb) {
                    cb({
                        type: 'tileValueChanged',
                        tile: _this,
                        newValue: value,
                        oldValue: oldValue
                    });
                });
            }
        },
        get: function get() {
            return this._value;
        }
    }, {
        key: 'rowIndex',
        set: function set(rowIndex) {
            this.element.className = this.element.className.replace(/tile-(\d+)-(\d+)/, 'tile-' + rowIndex + '-$2');
            this._rowIndex = rowIndex;
            this.status.moved = true;
        },
        get: function get() {
            return this._rowIndex;
        }
    }, {
        key: 'colIndex',
        set: function set(colIndex) {
            this.element.className = this.element.className.replace(/tile-(\d+)-(\d+)/, 'tile-$1-' + colIndex);
            this._colIndex = colIndex;
            this.status.moved = true;
        },
        get: function get() {
            return this._colIndex;
        }
    }], [{
        key: 'addEventHandler',
        value: function addEventHandler(type, cb) {
            var event = Tile.events[type];
            if (Tile.events[type] === undefined) {
                Tile.events[type] = [];
            }
            Tile.events[type].push(cb);
        }
    }]);

    return Tile;
}();

Tile.events = {};

var Game = function () {
    _createClass(Game, [{
        key: 'score',
        get: function get() {
            return this._score;
        },
        set: function set(value) {
            this._score = value;
            this.scoreEl.innerText = value;
        }
    }]);

    function Game(el) {
        _classCallCheck(this, Game);

        // render template
        el.innerHTML = TEMPLATES.game;
        this.container = el.querySelector('.game-container');
        this.grids = new Grids(el.querySelector('.grids-container'));
        Tile.tilesContainer = el.querySelector('.tiles-container');
        this.scoreEl = el.querySelector('.game-score');
        this._score = 0;
        this.btnNewGame = el.querySelector('.new-game');
        this.gameResultEl = el.querySelector('.game-result');
        this.btnRetry = el.querySelector('.game-retry');
        this.overlay = el.querySelector('.game-overlay');

        // fix events context
        this.gameEvents = this.gameEvents.bind(this);
        document.addEventListener('click', this.gameEvents);
        // self defined events
        Tile.addEventHandler('tileValueChanged', this.gameEvents);
        this.newGame();
    }

    _createClass(Game, [{
        key: 'newGame',
        value: function newGame() {
            this.grids.clearContents();
            Tile.tilesContainer.innerHTML = '';
            this.overlay.style.display = 'none';
            this.score = 0;
            document.addEventListener('keydown', this.gameEvents);
            // create 2 initial tiles
            this.newRandomTiles(2);
        }
    }, {
        key: 'gameEvents',
        value: function gameEvents(ev) {
            ev = ev || event;
            switch (ev.type) {
                case 'click':
                    {
                        if (ev.target === this.btnNewGame || ev.target === this.btnRetry) {
                            this.newGame();
                        }
                        break;
                    }
                case 'keydown':
                    {
                        var keyMap = {
                            '37': 'left',
                            '38': 'up',
                            '39': 'right',
                            '40': 'down'
                        };
                        var direction = keyMap[ev.keyCode + ''];
                        if (direction !== undefined) {
                            ev.preventDefault();
                            this.resetTilesStatus();
                            this.moveTiles(direction);
                            this.checkTilesStatus();
                        }
                        break;
                    }
                case 'tileValueChanged':
                    {
                        // check if win
                        if (ev.newValue === SETTINGS.target) {
                            this.setGameResult('win');
                        }
                    }
            }
        }
    }, {
        key: 'resetTilesStatus',
        value: function resetTilesStatus() {
            this.grids.forEachContent(null, function (tile) {
                if (tile === null) return;
                tile.resetStatus();
            });
        }
    }, {
        key: 'checkTilesStatus',
        value: function checkTilesStatus() {
            var someTileChanged = false;
            this.grids.forEachContent(null, function (tile) {
                if (tile === null) return;
                if (tile.status.moved || tile.status.merged) {
                    someTileChanged = true;
                    // todo: break inner and outer loop
                }
            });
            // if none tile changed, no new tile
            if (someTileChanged) {
                this.newRandomTiles(1);
            } else {
                // check if game over
                var emptyPos = this.grids.getEmptyGridsPos();
                if (emptyPos.length === 0 && !this.hasValueEqualedAdjTiles()) {
                    // alert('Game over!')
                    this.setGameResult('lose');
                }
            }
        }
    }, {
        key: 'setGameResult',
        value: function setGameResult() {
            var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'lose';

            this.gameResultEl.className = 'game-result ' + result;
            this.gameResultEl.innerHTML = result === 'win' ? 'You win!' : 'Game over!';
            this.overlay.style.display = 'block';
            document.removeEventListener('keydown', this.gameEvents);
        }
    }, {
        key: 'hasValueEqualedAdjTiles',
        value: function hasValueEqualedAdjTiles() {
            // check right, down of every tile
            for (var ri = 0, rlen = this.grids.contents.length; ri < rlen; ri++) {
                for (var ci = 0, clen = this.grids.contents[ri].length; ci < clen; ci++) {
                    var tile = this.grids.contents[ri][ci];
                    if (tile === null) continue;
                    if (ci < clen - 1) {
                        var rTile = this.grids.contents[ri][ci + 1];
                        if (rTile !== null && rTile.value === tile.value) {
                            return true;
                        }
                    }
                    if (ri < rlen - 1) {
                        var dTile = this.grids.contents[ri + 1][ci];
                        if (dTile !== null && dTile.value === tile.value) {
                            return true;
                        }
                    }
                }
            }
            return false;
        }
    }, {
        key: 'moveTiles',
        value: function moveTiles(direction) {
            // some game rules to be considered:
            // if none moved, then new tile will not generate
            switch (direction) {
                case 'left':
                    {
                        // colIndex--
                        for (var ri = 0, len = this.grids.contents.length; ri < len; ri++) {
                            // every row allows one merged
                            var merged = false;
                            var colLen = this.grids.contents[ri].length;
                            for (var ci = 1; ci < colLen; ci++) {
                                var tile = this.grids.contents[ri][ci];
                                if (tile === null) continue;
                                var cii = ci;
                                while (--cii >= 0) {
                                    var preTile = this.grids.contents[ri][cii];
                                    if (preTile !== null) {
                                        if (preTile.value === tile.value && merged === false) {
                                            preTile.value += tile.value;
                                            this.score += preTile.value;
                                            tile.element.parentNode.removeChild(tile.element);
                                            this.grids.contents[ri][ci] = null;
                                            preTile.status.merged = true;
                                            merged = true;
                                            break;
                                        } else if (tile.colIndex !== cii + 1) {
                                            tile.colIndex = cii + 1;
                                            this.grids.contents[ri][ci] = null;
                                            this.grids.contents[ri][cii + 1] = tile;
                                            tile.status.moved = true;
                                            break;
                                        } else {
                                            break;
                                        }
                                    } else if (cii === 0) {
                                        tile.colIndex = cii;
                                        this.grids.contents[ri][ci] = null;
                                        this.grids.contents[ri][cii] = tile;
                                        tile.status.moved = true;
                                        break;
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 'right':
                    {
                        // colIndex++
                        for (var _ri = 0, _len = this.grids.contents.length; _ri < _len; _ri++) {
                            var _merged = false;
                            var _colLen = this.grids.contents[_ri].length;
                            for (var _ci = _colLen - 2; _ci >= 0; _ci--) {
                                var _tile = this.grids.contents[_ri][_ci];
                                if (_tile === null) continue;
                                var _cii = _ci;
                                while (++_cii <= _colLen - 1) {
                                    var _preTile = this.grids.contents[_ri][_cii];
                                    if (_preTile !== null) {
                                        if (_preTile.value === _tile.value && _merged === false) {
                                            _preTile.value += _tile.value;
                                            this.score += _preTile.value;
                                            _tile.element.parentNode.removeChild(_tile.element);
                                            this.grids.contents[_ri][_ci] = null;
                                            _preTile.status.merged = true;
                                            _merged = true;
                                            break;
                                        } else if (_tile.colIndex !== _cii - 1) {
                                            _tile.colIndex = _cii - 1;
                                            this.grids.contents[_ri][_ci] = null;
                                            this.grids.contents[_ri][_cii - 1] = _tile;
                                            _tile.status.moved = true;
                                            break;
                                        } else {
                                            break;
                                        }
                                    } else if (_cii === _colLen - 1) {
                                        _tile.colIndex = _cii;
                                        this.grids.contents[_ri][_ci] = null;
                                        this.grids.contents[_ri][_cii] = _tile;
                                        _tile.status.moved = true;
                                        break;
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 'up':
                    {
                        // rowIndex--
                        // every column allow one merged
                        var _merged2 = [];
                        for (var _ci2 = 0, _len2 = this.grids.colLen; _ci2 < _len2; _ci2++) {
                            _merged2[_ci2] = false;
                        }
                        for (var _ri2 = 1, _len3 = this.grids.contents.length; _ri2 < _len3; _ri2++) {
                            for (var _ci3 = 0, _len4 = this.grids.contents[_ri2].length; _ci3 < _len4; _ci3++) {
                                var _tile2 = this.grids.contents[_ri2][_ci3];
                                if (_tile2 === null) continue;
                                var tri = _tile2.rowIndex;
                                while (--tri >= 0) {
                                    var _preTile2 = this.grids.contents[tri][_ci3];
                                    if (_preTile2 !== null) {
                                        if (_preTile2.value === _tile2.value && _merged2[_ci3] === false) {
                                            // merged tile into the preTile with the same value
                                            // update preTile value
                                            _preTile2.value += _tile2.value;
                                            this.score += _preTile2.value;
                                            // remove this tile
                                            _tile2.element.parentNode.removeChild(_tile2.element);
                                            this.grids.contents[_ri2][_ci3] = null;
                                            _preTile2.status.merged = true;
                                            _merged2[_ci3] = true;
                                            break;
                                        } else if (_tile2.rowIndex !== tri + 1) {
                                            _tile2.rowIndex = tri + 1;
                                            this.grids.contents[_ri2][_ci3] = null;
                                            this.grids.contents[_tile2.rowIndex][_ci3] = _tile2;
                                            _tile2.status.moved = true;
                                            break;
                                        } else {
                                            break;
                                        }
                                    } else if (tri === 0) {
                                        _tile2.rowIndex = tri;
                                        this.grids.contents[_ri2][_ci3] = null;
                                        this.grids.contents[tri][_ci3] = _tile2;
                                        _tile2.status.moved = true;
                                        break;
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 'down':
                    {
                        // rowIndex++
                        // every column allow one merged
                        var _merged3 = [];
                        for (var _ci4 = 0, _len5 = this.grids.colLen; _ci4 < _len5; _ci4++) {
                            _merged3[_ci4] = false;
                        }
                        for (var _ri3 = this.grids.contents.length - 2; _ri3 >= 0; _ri3--) {
                            for (var _ci5 = 0, _len6 = this.grids.contents[_ri3].length; _ci5 < _len6; _ci5++) {
                                var _tile3 = this.grids.contents[_ri3][_ci5];
                                if (_tile3 === null) continue;
                                var _tri = _tile3.rowIndex;
                                while (++_tri <= this.grids.contents.length - 1) {
                                    var _preTile3 = this.grids.contents[_tri][_ci5];
                                    if (_preTile3 !== null) {
                                        if (_preTile3.value === _tile3.value && _merged3[_ci5] === false) {
                                            // merged tile into the preTile with the same value
                                            // update preTile value
                                            _preTile3.value += _tile3.value;
                                            this.score += _preTile3.value;
                                            // remove this tile
                                            _tile3.element.parentNode.removeChild(_tile3.element);
                                            this.grids.contents[_ri3][_ci5] = null;
                                            _preTile3.status.merged = true;
                                            _merged3[_ci5] = true;
                                            break;
                                        } else if (_tile3.rowIndex !== _tri - 1) {
                                            _tile3.rowIndex = _tri - 1;
                                            this.grids.contents[_ri3][_ci5] = null;
                                            this.grids.contents[_tile3.rowIndex][_ci5] = _tile3;
                                            _tile3.status.moved = true;
                                            break;
                                        } else {
                                            break;
                                        }
                                    } else if (_tri === this.grids.contents.length - 1) {
                                        _tile3.rowIndex = _tri;
                                        this.grids.contents[_ri3][_ci5] = null;
                                        this.grids.contents[_tri][_ci5] = _tile3;
                                        _tile3.status.moved = true;
                                        break;
                                    }
                                }
                            }
                        }
                        break;
                    }
                default:
                    break;
            }
        }
    }, {
        key: 'newRandomTiles',
        value: function newRandomTiles() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            var randomValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [2, 4];

            var newTiles = [];
            for (var i = 0; i < n; i++) {
                var emptyGridsPos = this.grids.getEmptyGridsPos();
                if (emptyGridsPos.length === 0) {
                    break;
                }

                var _Util$getRandomItem = _util2.default.getRandomItem(emptyGridsPos),
                    _Util$getRandomItem2 = _slicedToArray(_Util$getRandomItem, 2),
                    rowIndex = _Util$getRandomItem2[0],
                    colIndex = _Util$getRandomItem2[1];

                var value = _util2.default.getRandomItem(randomValues);
                var tile = new Tile(value, rowIndex, colIndex);
                this.grids.contents[rowIndex][colIndex] = tile;
                newTiles.push(tile);
            }
            return newTiles;
        }
    }]);

    return Game;
}();

/*
main
 */

var game = new Game(document.querySelector('#gameApp'));

/***/ }),

/***/ "./js/util.js":
/*!********************!*\
  !*** ./js/util.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    /**
     * min <= randomInt < max
     * @param min
     * @param max
     * @returns {*}
     */
    getRandomInt: function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive
    },
    getRandomItem: function getRandomItem(arr) {
        if (arr.length === 0) {
            return null;
        }
        return arr[this.getRandomInt(0, arr.length)];
    },
    mandatoryArg: function mandatoryArg() {
        throw new Error('mandatory argument missing!');
    }
};

/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--6-1!./css/normalize.css":
/*!***********************************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader??ref--6-1!./css/normalize.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js */ "./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js")(true);
// imports


// module
exports.push([module.i, "/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n    margin: 0;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n    background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n    font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n    font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\nsup {\n    top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n    border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n    overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n    text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n    -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n    padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n    vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n    overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n    display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n    display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n    display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n    display: none;\n}", "", {"version":3,"sources":["/Users/lichong/Sources/2018-contest/css/normalize.css"],"names":[],"mappings":"AAAA,4EAA4E;;AAE5E;gFACgF;;AAEhF;;;GAGG;;AAEH;IACI,kBAAkB,CAAC,OAAO;IAC1B,+BAA+B,CAAC,OAAO;CAC1C;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,UAAU;CACb;;AAED;;;GAGG;;AAEH;IACI,eAAe;IACf,iBAAiB;CACpB;;AAED;gFACgF;;AAEhF;;;GAGG;;AAEH;IACI,wBAAwB,CAAC,OAAO;IAChC,UAAU,CAAC,OAAO;IAClB,kBAAkB,CAAC,OAAO;CAC7B;;AAED;;;GAGG;;AAEH;IACI,kCAAkC,CAAC,OAAO;IAC1C,eAAe,CAAC,OAAO;CAC1B;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,8BAA8B;CACjC;;AAED;;;GAGG;;AAEH;IACI,oBAAoB,CAAC,OAAO;IAC5B,2BAA2B,CAAC,OAAO;IACnC,kCAAkC,CAAC,OAAO;CAC7C;;AAED;;GAEG;;AAEH;;IAEI,oBAAoB;CACvB;;AAED;;;GAGG;;AAEH;;;IAGI,kCAAkC,CAAC,OAAO;IAC1C,eAAe,CAAC,OAAO;CAC1B;;AAED;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;;GAGG;;AAEH;;IAEI,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,yBAAyB;CAC5B;;AAED;IACI,gBAAgB;CACnB;;AAED;IACI,YAAY;CACf;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,mBAAmB;CACtB;;AAED;gFACgF;;AAEhF;;;GAGG;;AAEH;;;;;IAKI,qBAAqB,CAAC,OAAO;IAC7B,gBAAgB,CAAC,OAAO;IACxB,kBAAkB,CAAC,OAAO;IAC1B,UAAU,CAAC,OAAO;CACrB;;AAED;;;GAGG;;AAEH;QACQ,OAAO;IACX,kBAAkB;CACrB;;AAED;;;GAGG;;AAEH;SACS,OAAO;IACZ,qBAAqB;CACxB;;AAED;;GAEG;;AAEH;;;;IAII,2BAA2B;CAC9B;;AAED;;GAEG;;AAEH;;;;IAII,mBAAmB;IACnB,WAAW;CACd;;AAED;;GAEG;;AAEH;;;;IAII,+BAA+B;CAClC;;AAED;;GAEG;;AAEH;IACI,+BAA+B;CAClC;;AAED;;;;;GAKG;;AAEH;IACI,uBAAuB,CAAC,OAAO;IAC/B,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,OAAO;IACvB,gBAAgB,CAAC,OAAO;IACxB,WAAW,CAAC,OAAO;IACnB,oBAAoB,CAAC,OAAO;CAC/B;;AAED;;GAEG;;AAEH;IACI,yBAAyB;CAC5B;;AAED;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;;GAGG;;AAEH;;IAEI,uBAAuB,CAAC,OAAO;IAC/B,WAAW,CAAC,OAAO;CACtB;;AAED;;GAEG;;AAEH;;IAEI,aAAa;CAChB;;AAED;;;GAGG;;AAEH;IACI,8BAA8B,CAAC,OAAO;IACtC,qBAAqB,CAAC,OAAO;CAChC;;AAED;;GAEG;;AAEH;IACI,yBAAyB;CAC5B;;AAED;;;GAGG;;AAEH;IACI,2BAA2B,CAAC,OAAO;IACnC,cAAc,CAAC,OAAO;CACzB;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,eAAe;CAClB;;AAED;;GAEG;;AAEH;IACI,mBAAmB;CACtB;;AAED;gFACgF;;AAEhF;;GAEG;;AAEH;IACI,cAAc;CACjB;;AAED;;GAEG;;AAEH;IACI,cAAc;CACjB","file":"normalize.css","sourcesContent":["/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n    margin: 0;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n    background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n    font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n    font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\nsup {\n    top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n    border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n    overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n    text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n    -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n    padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n    vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n    overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n    display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n    display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n    display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n    display: none;\n}"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--6-1!./node_modules/_stylus-loader@3.0.2@stylus-loader/index.js!./css/main.styl":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader??ref--6-1!./node_modules/_stylus-loader@3.0.2@stylus-loader!./css/main.styl ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js */ "./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js")(true);
// imports
exports.i(__webpack_require__(/*! -!../node_modules/_css-loader@0.28.11@css-loader??ref--6-1!./normalize.css */ "./node_modules/_css-loader@0.28.11@css-loader/index.js??ref--6-1!./css/normalize.css"), "");

// module
exports.push([module.i, "@-moz-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-o-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-moz-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-o-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\nbody {\n  margin: 10px 0;\n}\n.game-container {\n  width: 610px;\n  margin: 0 auto;\n}\n.game-header {\n  height: 80px;\n  color: #fff;\n  font: 24px/30px Arial;\n}\n.game-header:after {\n  content: '';\n  display: -webkit-box /* OLD - iOS 6-, Safari 3.1-6 */;\n  display: -moz-box /* OLD - Firefox 19- (buggy but mostly works) */;\n  display: table;\n  clear: both;\n}\n.game-title {\n  float: left;\n  margin: 0;\n  color: #776e65;\n  font: bold 80px/80px Arial;\n}\n.game-score-box,\n.game-best-score-box {\n  float: right;\n  width: 100px;\n  height: 60px;\n  list-style: none;\n  margin: 10px 1px;\n  padding: 0;\n  text-align: center;\n  -webkit-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #b9ada1;\n}\n.new-game {\n  float: right;\n  width: 130px;\n  height: 60px;\n  margin: 10px 1px;\n  text-align: center;\n  color: #fff;\n  -webkit-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #8f7a66;\n  cursor: pointer;\n}\n.game-wrapper {\n  position: relative;\n}\n.game-overlay {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 2;\n  background-color: rgba(255,255,255,0.4);\n  display: -webkit-box /* OLD - iOS 6-, Safari 3.1-6 */;\n  display: -moz-box /* OLD - Firefox 19- (buggy but mostly works) */;\n  display: none;\n  text-align: center;\n}\n.game-result {\n  margin-top: 30%;\n  font: bold 60px/60px Arial;\n}\n.game-result.lose {\n  color: #766e66;\n}\n.game-result.win {\n  color: #e7c24f;\n}\n.game-retry {\n  width: 230px;\n  height: 48px;\n  font: 24px/48px Arial;\n  color: #f9f6f2;\n  background-color: #8c7a68;\n  cursor: pointer;\n}\n.grids-table {\n  background-color: #cdc0b4;\n  border-collapse: collapse;\n}\n.grids-container tr {\n  margin: 0;\n  padding: 0;\n}\n.grids-container td {\n  text-align: center;\n  vertical-align: middle;\n  width: 150px;\n  height: 150px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  border: 10px solid #bbada0;\n  margin: 0;\n  padding: 0;\n}\n.tile {\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 1;\n  width: 140px;\n  height: 140px;\n  -webkit-transition: transform 0.1s ease-in-out;\n  -moz-transition: transform 0.1s ease-in-out;\n  -ms-transition: transform 0.1s ease-in-out;\n  transition: transform 0.1s ease-in-out;\n}\n.tile-0-0 {\n  -webkit-transform: translate(10px, 10px);\n  -moz-transform: translate(10px, 10px);\n  -ms-transform: translate(10px, 10px);\n  transform: translate(10px, 10px);\n}\n.tile-0-1 {\n  -webkit-transform: translate(160px, 10px);\n  -moz-transform: translate(160px, 10px);\n  -ms-transform: translate(160px, 10px);\n  transform: translate(160px, 10px);\n}\n.tile-0-2 {\n  -webkit-transform: translate(310px, 10px);\n  -moz-transform: translate(310px, 10px);\n  -ms-transform: translate(310px, 10px);\n  transform: translate(310px, 10px);\n}\n.tile-0-3 {\n  -webkit-transform: translate(460px, 10px);\n  -moz-transform: translate(460px, 10px);\n  -ms-transform: translate(460px, 10px);\n  transform: translate(460px, 10px);\n}\n.tile-1-0 {\n  -webkit-transform: translate(10px, 160px);\n  -moz-transform: translate(10px, 160px);\n  -ms-transform: translate(10px, 160px);\n  transform: translate(10px, 160px);\n}\n.tile-1-1 {\n  -webkit-transform: translate(160px, 160px);\n  -moz-transform: translate(160px, 160px);\n  -ms-transform: translate(160px, 160px);\n  transform: translate(160px, 160px);\n}\n.tile-1-2 {\n  -webkit-transform: translate(310px, 160px);\n  -moz-transform: translate(310px, 160px);\n  -ms-transform: translate(310px, 160px);\n  transform: translate(310px, 160px);\n}\n.tile-1-3 {\n  -webkit-transform: translate(460px, 160px);\n  -moz-transform: translate(460px, 160px);\n  -ms-transform: translate(460px, 160px);\n  transform: translate(460px, 160px);\n}\n.tile-2-0 {\n  -webkit-transform: translate(10px, 310px);\n  -moz-transform: translate(10px, 310px);\n  -ms-transform: translate(10px, 310px);\n  transform: translate(10px, 310px);\n}\n.tile-2-1 {\n  -webkit-transform: translate(160px, 310px);\n  -moz-transform: translate(160px, 310px);\n  -ms-transform: translate(160px, 310px);\n  transform: translate(160px, 310px);\n}\n.tile-2-2 {\n  -webkit-transform: translate(310px, 310px);\n  -moz-transform: translate(310px, 310px);\n  -ms-transform: translate(310px, 310px);\n  transform: translate(310px, 310px);\n}\n.tile-2-3 {\n  -webkit-transform: translate(460px, 310px);\n  -moz-transform: translate(460px, 310px);\n  -ms-transform: translate(460px, 310px);\n  transform: translate(460px, 310px);\n}\n.tile-3-0 {\n  -webkit-transform: translate(10px, 460px);\n  -moz-transform: translate(10px, 460px);\n  -ms-transform: translate(10px, 460px);\n  transform: translate(10px, 460px);\n}\n.tile-3-1 {\n  -webkit-transform: translate(160px, 460px);\n  -moz-transform: translate(160px, 460px);\n  -ms-transform: translate(160px, 460px);\n  transform: translate(160px, 460px);\n}\n.tile-3-2 {\n  -webkit-transform: translate(310px, 460px);\n  -moz-transform: translate(310px, 460px);\n  -ms-transform: translate(310px, 460px);\n  transform: translate(310px, 460px);\n}\n.tile-3-3 {\n  -webkit-transform: translate(460px, 460px);\n  -moz-transform: translate(460px, 460px);\n  -ms-transform: translate(460px, 460px);\n  transform: translate(460px, 460px);\n}\n.tile-inner {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  line-height: 140px;\n  font-size: 56px;\n  font-weight: bold;\n  font-family: \"Helvetica Neue\", Arial, sans-serif;\n}\n.tile-new>.tile-inner {\n  -webkit-animation: appear 0.2s ease 0.1s backwards;\n  -moz-animation: appear 0.2s ease 0.1s backwards;\n  -ms-animation: appear 0.2s ease 0.1s backwards;\n  animation: appear 0.2s ease 0.1s backwards;\n}\n.tile-merged>.tile-inner {\n  -webkit-animation: pop 0.2s ease 0.1s backwards;\n  -moz-animation: pop 0.2s ease 0.1s backwards;\n  -ms-animation: pop 0.2s ease 0.1s backwards;\n  animation: pop 0.2s ease 0.1s backwards;\n}\n.tile-value-2 {\n  color: #766e66;\n  background-color: #ede4db;\n}\n.tile-value-4 {\n  color: #766e66;\n  background-color: #ebe0cb;\n}\n.tile-value-8 {\n  color: #f9f6f2;\n  background-color: #e9b381;\n}\n.tile-value-16 {\n  color: #f9f6f2;\n  background-color: #e99c6c;\n}\n.tile-value-32 {\n  color: #f9f6f2;\n  background-color: #e88267;\n}\n.tile-value-64 {\n  color: #f9f6f2;\n  background-color: #e66747;\n}\n.tile-value-128 {\n  color: #f9f6f2;\n  background-color: #e9cf7f;\n}\n.tile-value-256 {\n  color: #f9f6f2;\n  background-color: #e9cc72;\n}\n.tile-value-512 {\n  color: #f9f6f2;\n  background-color: #edc850;\n}\n.tile-value-1024 {\n  color: #f9f6f2;\n  background-color: #edc53f;\n}\n.tile-value-2048 {\n  color: #f9f6f2;\n  background-color: #edc22e;\n}\n", "", {"version":3,"sources":["/Users/lichong/Sources/2018-contest/css/css/animations.styl","/Users/lichong/Sources/2018-contest/css/css/vendor.styl","/Users/lichong/Sources/2018-contest/css/main.styl","/Users/lichong/Sources/2018-contest/css/css/main.styl","/Users/lichong/Sources/2018-contest/css/css/utils.styl"],"names":[],"mappings":"AAEW;EACT;ICqBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAoUP,yBAAA;IACA,iEAAA;IDrVF,mBAAA;GEID;EFHD;ICkBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAiUP,iBAAA;IACA,aAAA;IA/T4B,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCDV;CACF;AFnBU;EACT;ICqBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAoUP,yBAAA;IACA,iEAAA;IDrVF,mBAAA;GEyBD;EFxBD;ICkBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAiUP,iBAAA;IACA,aAAA;IA/T4B,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCoBV;CACF;AFxCU;EACT;ICqBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAoUP,yBAAA;IACA,iEAAA;IDrVF,mBAAA;GE8CD;EF7CD;ICkBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAiUP,iBAAA;IACA,aAAA;IA/T4B,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCyCV;CACF;AF7DU;EACT;ICqBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAoUP,yBAAA;IACA,iEAAA;IDrVF,mBAAA;GEmED;EFlED;ICkBgC,mBAAA;IAAA,gBAAA;IAHrB,WAAA;IAiUP,iBAAA;IACA,aAAA;IA/T4B,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GC8DV;CACF;AF1EU;EACT;ICagC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCsEV;EF9ED;ICWgC,8BAAA;IAAA,2BAAA;IAAA,0BAAA;IAHrB,sBAAA;GC4EV;EFlFD;ICSgC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCkFV;CACF;AF9FU;EACT;ICagC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GC0FV;EFlGD;ICWgC,8BAAA;IAAA,2BAAA;IAAA,0BAAA;IAHrB,sBAAA;GCgGV;EFtGD;ICSgC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCsGV;CACF;AFlHU;EACT;ICagC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GC8GV;EFtHD;ICWgC,8BAAA;IAAA,2BAAA;IAAA,0BAAA;IAHrB,sBAAA;GCoHV;EF1HD;ICSgC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GC0HV;CACF;AFtIU;EACT;ICagC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GCkIV;EF1ID;ICWgC,8BAAA;IAAA,2BAAA;IAAA,0BAAA;IAHrB,sBAAA;GCwIV;EF9ID;ICSgC,4BAAA;IAAA,yBAAA;IAAA,wBAAA;IAHrB,oBAAA;GC8IV;CACF;ACxJD;EACE,eAAA;CD0JD;ACxJD;EACE,aAAA;EACA,eAAA;CD0JD;ACxJD;EACE,aAAA;EACA,YAAA;EACA,sBAAA;CD0JD;AE/KC;EACE,YAAA;EHqJF,sDAAA;EACA,mEAAA;EAWE,eAAA;EG/JA,YAAA;CFmLH;AC9JD;EACE,YAAA;EACA,UAAA;EACA,eAAA;EACA,2BAAA;CDgKD;AC9JD;;EACE,aAAA;EACA,aAAA;EACA,aAAA;EACA,iBAAA;EACA,iBAAA;EACA,WAAA;EACA,mBAAA;EFdgC,2BAAA;EAHrB,mBAAA;EEmBX,0BAAA;CDkKD;AChKD;EACE,aAAA;EACA,aAAA;EACA,aAAA;EACA,iBAAA;EACA,mBAAA;EACA,YAAA;EFxBgC,2BAAA;EAHrB,mBAAA;EE6BX,0BAAA;EACA,gBAAA;CDmKD;AChKD;EACE,mBAAA;CDkKD;ACjKD;EACE,mBAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,UAAA;EACA,WAAA;EACA,wCAAA;EFwFA,sDAAA;EACA,mEAAA;EAWE,cAAA;EElGF,mBAAA;CDqKD;ACpKD;EACE,gBAAA;EACA,2BAAA;CDsKD;ACrKC;EACE,eAAA;CDuKH;ACtKC;EACE,eAAA;CDwKH;ACvKD;EACE,aAAA;EACA,aAAA;EACA,sBAAA;EACA,eAAA;EACA,0BAAA;EACA,gBAAA;CDyKD;ACvKD;EACE,0BAAA;EACA,0BAAA;CDyKD;ACxKD;EACE,UAAA;EACA,WAAA;CD0KD;ACzKD;EACE,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,cAAA;EFnEgC,+BAAA;EAAA,4BAAA;EAHrB,uBAAA;EEwEX,2BAAA;EACA,UAAA;EACA,WAAA;CD6KD;AC3KD;EACE,mBAAA;EACA,QAAA;EACA,OAAA;EACA,WAAA;EACA,aAAA;EACA,cAAA;EF/EgC,+CAAA;EAAA,4CAAA;EAAA,2CAAA;EAHrB,uCAAA;CCmQZ;AC5KG;EFpF8B,yCAAA;EAAA,sCAAA;EAAA,qCAAA;EAHrB,iCAAA;CCyQZ;AClLG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CC+QZ;ACxLG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CCqRZ;AC9LG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CC2RZ;ACpMG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CCiSZ;AC1MG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CCuSZ;AChNG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CC6SZ;ACtNG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CCmTZ;AC5NG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CCyTZ;AClOG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CC+TZ;ACxOG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CCqUZ;AC9OG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CC2UZ;ACpPG;EFpF8B,0CAAA;EAAA,uCAAA;EAAA,sCAAA;EAHrB,kCAAA;CCiVZ;AC1PG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CCuVZ;AChQG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CC6VZ;ACtQG;EFpF8B,2CAAA;EAAA,wCAAA;EAAA,uCAAA;EAHrB,mCAAA;CCmWZ;AC1QD;EACE,mBAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,UAAA;EACA,mBAAA;EACA,mBAAA;EACA,gBAAA;EACA,kBAAA;EACA,iDAAA;CD4QD;AC1QD;EFlGkC,mDAAA;EAAA,gDAAA;EAAA,+CAAA;EAHrB,2CAAA;CCqXZ;AC9QD;EFpGkC,gDAAA;EAAA,6CAAA;EAAA,4CAAA;EAHrB,wCAAA;CC2XZ;AChRD;EACE,eAAA;EACA,0BAAA;CDkRD;ACjRD;EACE,eAAA;EACA,0BAAA;CDmRD;AClRD;EACE,eAAA;EACA,0BAAA;CDoRD;ACnRD;EACE,eAAA;EACA,0BAAA;CDqRD;ACpRD;EACE,eAAA;EACA,0BAAA;CDsRD;ACrRD;EACE,eAAA;EACA,0BAAA;CDuRD;ACtRD;EACE,eAAA;EACA,0BAAA;CDwRD;ACvRD;EACE,eAAA;EACA,0BAAA;CDyRD;ACxRD;EACE,eAAA;EACA,0BAAA;CD0RD;ACzRD;EACE,eAAA;EACA,0BAAA;CD2RD;AC1RD;EACE,eAAA;EACA,0BAAA;CD4RD","file":"main.styl","sourcesContent":["//vendors ?= webkit moz ms official\n//vendors = official\n@keyframes appear\n  0%\n    opacity:0\n    tranform: scale(0)\n  100%\n    opacity:1\n    transform: scale(1)\n\n@keyframes pop\n  0%\n    transform: scale(1)\n  50%\n    transform: scale(1.2)\n  100%\n    transform: scale(1)","// AutoPrefixCSS\n// description Break free from CSS prefix hell!\n// author kenny wang <398188662@qq.com> (http://JSLite.io)\n//\n// 1. https://github.com/tj/nib\n\n//Support for ie defaulting to true.\nsupport-for-ie ?= true\n\n\n//Default vendor prefixes.\n//vendor-prefixes ?= webkit khtml moz o ms official\nvendor-prefixes ?= webkit moz ms official\n\n// Vendor support for the given prop / arguments,\n// optionally specifying the only prefixes to utilize,\n// or those which should be ignored.\nvendor(prop, args, only = null, ignore = null,vendor-property = true)\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix or vendor-property == false\n        {prop}: args\n      else\n        newargs = args\n        {'-' + prefix + '-' + prop}: newargs\n\n\n\n\n\n// vendor(prop, args, only = null, ignore = null, vendor-property = true)\n//     need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n//     for prefix in vendor-prefixes\n//         unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n//             if official == prefix\n//                 if need_normalize\n//                     {prop}: normalize(prop,('%s' % args))\n//                 else\n//                     {prop}: args\n//             else\n//                 newprop = prop\n//                 newprop = '-' + prefix + '-' + prop if vendor-property\n\n//                 if need_normalize\n//                     {newprop}: normalize(prop,('%s' % args),prefix)\n//                 else\n//                     {newprop}: args\n\n\n\n// A\n// align-items()\n//     vendor(\"align-items\",arguments)\n\n// align-content()\n//     vendor(\"align-content\",arguments)\n\n\nanimation()\n  vendor('animation', arguments)\n\n// B\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz ms official)\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\nborder-radius()\n  vendor('border-radius', arguments, only: webkit official)\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n// C\n\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n\n// D\ndisplay(value)\n  // Initializing a flexbox container\n  display -webkit-box      /* OLD - iOS 6-, Safari 3.1-6 */\n  display -moz-box         /* OLD - Firefox 19- (buggy but mostly works) */\n  if value == inline-flex\n    display -ms-inline-flexbox      /* TWEENER - IE 10 */\n    display -webkit-inline-flex     /* NEW - Chrome */\n    display value                   /* NEW, Spec - Opera 12.1, Firefox 20+ */\n  else if value == flex\n    display -ms-flexbox       /* TWEENER - IE 10 */\n    display -webkit-flex      /* NEW - Chrome */\n    display flex              /* NEW, Spec - Opera 12.1, Firefox 20+ */\n\n  if arguments != 'flex'\n    display: arguments;\n  else\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n\n// E\n\n// F\nflex-wrap(value)\n  // Implementation of the flex-wrap attribute.\n  vendor('flex-wrap',value)\n\nflex-flow()\n  vendor('flex-flow',arguments)\n\nflex-direction(value)\n  // Implementation of flex-direction attributes.\n  if value == row\n    -webkit-box-direction normal\n    -moz-box-direction normal\n    -webkit-box-orient horizontal\n    -moz-box-orient horizontal\n  else if value == row-reverse\n    -webkit-box-direction reverse\n    -moz-box-direction reverse\n    -webkit-box-orient horizontal\n    -moz-box-orient horizontal\n  else if value == column\n    -webkit-box-direction normal\n    -moz-box-direction normal\n    -webkit-box-orient vertical\n    -moz-box-orient vertical\n  else if value == column-reverse\n    -webkit-box-direction reverse\n    -moz-box-direction reverse\n    -webkit-box-orient vertical\n    -moz-box-orient vertical\n  -webkit-flex-direction value\n  -ms-flex-direction value\n  flex-direction value\n\nflexbox(value)\n  // Initializing a flexbox container\n  display -webkit-box      /* OLD - iOS 6-, Safari 3.1-6 */\n  display -moz-box         /* OLD - Firefox 19- (buggy but mostly works) */\n  if value == inline-flex\n    display -ms-inline-flexbox      /* TWEENER - IE 10 */\n    display -webkit-inline-flex     /* NEW - Chrome */\n    display value                   /* NEW, Spec - Opera 12.1, Firefox 20+ */\n  else if value == flex\n    display -ms-flexbox       /* TWEENER - IE 10 */\n    display -webkit-flex      /* NEW - Chrome */\n    display flex              /* NEW, Spec - Opera 12.1, Firefox 20+ */\n\nflex(size = null, grow = 0, shrink = 0, basis = auto)\n  // For configuring the flex elements\n  -webkit-box-flex grow\n  -moz-box-flex grow\n  if size != null\n    width size\n  -webkit-flex grow shrink basis\n  -ms-flex grow shrink basis\n  flex grow shrink basis\n\nflex-content(value)\n  // Implements the align-content settings\n  if value == space-around\n    -webkit-align-content value\n    -ms-flex-line-pack distribute\n    align-content value\n  else if value == space-between\n    -webkit-align-content value\n    -ms-flex-line-pack justify\n    align-content value\n  else if value == end or value == start\n    -webkit-align-content flex-+value\n    -ms-flex-line-pack value\n    align-content flex-+value\n  else\n    -webkit-align-content value\n    -ms-flex-line-pack value\n    align-content value\n\nflex-align(value)\n  // Function for align-items\n  if value == start or value == end\n    -webkit-box-align value\n    -moz-box-align value\n    -webkit-align-items flex-+value\n    -ms-flex-align value\n    align-items flex-+value\n  else\n    -webkit-box-align value\n    -moz-box-align value\n    -webkit-align-items value\n    -ms-flex-align value\n\nflex-firefox()\n  // Helper to manage inline bugs in legacy Firefox\n  width 100%\n  -moz-box-sizing border-box\n\nflex-group(value)\n  // Manages ordering of the flex elements within a container\n  -webkit-box-ordinal-group value\n  -moz-box-ordinal-group value\n  -ms-flex-order value\n  -webkit-order value\n  order value\n\nflex-self(value)\n  // Function for aligning the flex elements (align-self)\n  if value == start or value == end\n    -webkit-align-self flex-+value\n    -ms-flex-item-align value\n    align-self flex-+value\n  else\n    -webkit-align-self value\n    -ms-flex-item-align value\n    align-self value\n\nflex-justify(value)\n  // Implements the justify-content settings.\n  if value == start || value == end\n    -webkit-box-pack value\n    -moz-box-pack value\n    -webkit-justify-content flex-+value\n    -ms-flex-pack value\n    justify-content flex-+value\n  else if value == center\n    -webkit-box-pack value\n    -moz-box-pack value\n    -webkit-justify-content value\n    -ms-flex-pack value\n    justify-content value\n  else if value == space-between\n    -webkit-box-pack justify\n    -moz-box-pack justify\n    -webkit-justify-content value\n    -ms-flex-pack justify\n    justify-content value\n  else if value == space-around\n    -webkit-box-pack justify\n    -moz-box-pack justify\n    -webkit-justify-content value\n    -ms-flex-pack distribute\n    justify-content value\n\n\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n// G\n\n// H\n\n// I\n\n// J\njustify-content()\n  vendor('justify-content',arguments)\n\n// K\n\n// L\n\n// M\n\n// N\n\n// O\n\nopacity(n, args...)\n  // opacity: n args\n  vendor('opacity', arguments, only: webkit moz official)\n  if support-for-ie\n    val = round(n * 100)\n    if val == 100\n      -ms-filter: none\n      filter: none\n    else\n      filter: 'alpha(opacity=%s)' % val args\n      -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n\n// P\nprint-color-adjust()\n  vendor('print-color-adjust',arguments)\n\n// Q\n\n// R\n\n// S\n\n// T\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\ntransition()\n  vendor('transition', arguments)\n\ntransition-property()\n  vendor('transition-property', arguments)\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\ntransform()\n  vendor('transform', arguments)\n\ntransform-origin()\n  vendor('transform-origin', arguments)\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n// U\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n\n// V\n\n// W\n\n// X\n\n// Y\n\n// Z\n\n\n\n\n\n// -webkit-app-region: no-drag;\n// -webkit-appearance: none;\n// -webkit-background-composite: source-over;\n// -webkit-border-horizontal-spacing: 0px;\n// -webkit-border-vertical-spacing: 0px;\n// -webkit-box-align: stretch;\n// -webkit-box-decoration-break: slice;\n// -webkit-box-direction: normal;\n// -webkit-box-flex: 0;\n// -webkit-box-flex-group: 1;\n// -webkit-box-lines: single;\n// -webkit-box-ordinal-group: 1;\n// -webkit-box-orient: horizontal;\n// -webkit-box-pack: start;\n// -webkit-box-reflect: none;\n// -webkit-column-break-after: auto;\n// -webkit-column-break-before: auto;\n// -webkit-column-break-inside: auto;\n// -webkit-column-count: auto;\n// -webkit-column-gap: normal;\n// -webkit-column-rule-color: rgb(51, 51, 51);\n// -webkit-column-rule-style: none;\n// -webkit-column-rule-width: 0px;\n// -webkit-column-span: none;\n// -webkit-column-width: auto;\n// -webkit-font-smoothing: auto;\n// -webkit-highlight: none;\n// -webkit-hyphenate-character: auto;\n// -webkit-line-box-contain: block inline replaced;\n// -webkit-line-break: auto;\n// -webkit-line-clamp: none;\n// -webkit-locale: 'zh-CN';\n// -webkit-margin-after-collapse: collapse;\n// -webkit-margin-before-collapse: collapse;\n// -webkit-mask-box-image: none;\n// -webkit-mask-box-image-outset: 0px;\n// -webkit-mask-box-image-repeat: stretch;\n// -webkit-mask-box-image-slice: 0 fill;\n// -webkit-mask-box-image-source: none;\n// -webkit-mask-box-image-width: auto;\n// -webkit-mask-clip: border-box;\n// -webkit-mask-composite: source-over;\n// -webkit-mask-image: none;\n// -webkit-mask-origin: border-box;\n// -webkit-mask-position: 0% 0%;\n// -webkit-mask-repeat: repeat;\n// -webkit-mask-size: auto;\n// -webkit-print-color-adjust: economy;\n// -webkit-rtl-ordering: logical;\n// -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n// -webkit-text-combine: none;\n// -webkit-text-decorations-in-effect: none;\n// -webkit-text-emphasis-color: rgb(51, 51, 51);\n// -webkit-text-emphasis-position: over;\n// -webkit-text-emphasis-style: none;\n// -webkit-text-fill-color: rgb(51, 51, 51);\n// -webkit-text-orientation: vertical-right;\n// -webkit-text-security: none;\n// -webkit-text-stroke-color: rgb(51, 51, 51);\n// -webkit-text-stroke-width: 0px;\n// -webkit-user-drag: auto;\n// -webkit-user-modify: read-only;\n// -webkit-user-select: text;\n\n\n/*\n * Size utility.\n *\n * Synopsis:\n *\n *   size: <width> <height> | <width & height>\n *\n * Examples:\n *\n *     size: 100% 30px\n *       yields:\n *         width: 100%\n *         height: 30px\n *\n *     size: 5px\n *       yields:\n *         width: 5px\n *         height: 5px\n *\n */\n\nsize()\n  if length(arguments) == 1\n    width: arguments[0]\n    height: arguments[0]\n  else\n    width: arguments[0]\n    height: arguments[1]","@import \"normalize.css\";\n@-moz-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-o-keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@keyframes appear {\n  0% {\n    -webkit-opacity: 0;\n    -moz-opacity: 0;\n    opacity: 0;\n    filter: alpha(opacity=0);\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    tranform: scale(0);\n  }\n  100% {\n    -webkit-opacity: 1;\n    -moz-opacity: 1;\n    opacity: 1;\n    -ms-filter: none;\n    filter: none;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-moz-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@-o-keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\n@keyframes pop {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n  50% {\n    -webkit-transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    transform: scale(1.2);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    transform: scale(1);\n  }\n}\nbody {\n  margin: 10px 0;\n}\n.game-container {\n  width: 610px;\n  margin: 0 auto;\n}\n.game-header {\n  height: 80px;\n  color: #fff;\n  font: 24px/30px Arial;\n}\n.game-header:after {\n  content: '';\n  display: -webkit-box /* OLD - iOS 6-, Safari 3.1-6 */;\n  display: -moz-box /* OLD - Firefox 19- (buggy but mostly works) */;\n  display: table;\n  clear: both;\n}\n.game-title {\n  float: left;\n  margin: 0;\n  color: #776e65;\n  font: bold 80px/80px Arial;\n}\n.game-score-box,\n.game-best-score-box {\n  float: right;\n  width: 100px;\n  height: 60px;\n  list-style: none;\n  margin: 10px 1px;\n  padding: 0;\n  text-align: center;\n  -webkit-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #b9ada1;\n}\n.new-game {\n  float: right;\n  width: 130px;\n  height: 60px;\n  margin: 10px 1px;\n  text-align: center;\n  color: #fff;\n  -webkit-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #8f7a66;\n  cursor: pointer;\n}\n.game-wrapper {\n  position: relative;\n}\n.game-overlay {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 2;\n  background-color: rgba(255,255,255,0.4);\n  display: -webkit-box /* OLD - iOS 6-, Safari 3.1-6 */;\n  display: -moz-box /* OLD - Firefox 19- (buggy but mostly works) */;\n  display: none;\n  text-align: center;\n}\n.game-result {\n  margin-top: 30%;\n  font: bold 60px/60px Arial;\n}\n.game-result.lose {\n  color: #766e66;\n}\n.game-result.win {\n  color: #e7c24f;\n}\n.game-retry {\n  width: 230px;\n  height: 48px;\n  font: 24px/48px Arial;\n  color: #f9f6f2;\n  background-color: #8c7a68;\n  cursor: pointer;\n}\n.grids-table {\n  background-color: #cdc0b4;\n  border-collapse: collapse;\n}\n.grids-container tr {\n  margin: 0;\n  padding: 0;\n}\n.grids-container td {\n  text-align: center;\n  vertical-align: middle;\n  width: 150px;\n  height: 150px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  border: 10px solid #bbada0;\n  margin: 0;\n  padding: 0;\n}\n.tile {\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 1;\n  width: 140px;\n  height: 140px;\n  -webkit-transition: transform 0.1s ease-in-out;\n  -moz-transition: transform 0.1s ease-in-out;\n  -ms-transition: transform 0.1s ease-in-out;\n  transition: transform 0.1s ease-in-out;\n}\n.tile-0-0 {\n  -webkit-transform: translate(10px, 10px);\n  -moz-transform: translate(10px, 10px);\n  -ms-transform: translate(10px, 10px);\n  transform: translate(10px, 10px);\n}\n.tile-0-1 {\n  -webkit-transform: translate(160px, 10px);\n  -moz-transform: translate(160px, 10px);\n  -ms-transform: translate(160px, 10px);\n  transform: translate(160px, 10px);\n}\n.tile-0-2 {\n  -webkit-transform: translate(310px, 10px);\n  -moz-transform: translate(310px, 10px);\n  -ms-transform: translate(310px, 10px);\n  transform: translate(310px, 10px);\n}\n.tile-0-3 {\n  -webkit-transform: translate(460px, 10px);\n  -moz-transform: translate(460px, 10px);\n  -ms-transform: translate(460px, 10px);\n  transform: translate(460px, 10px);\n}\n.tile-1-0 {\n  -webkit-transform: translate(10px, 160px);\n  -moz-transform: translate(10px, 160px);\n  -ms-transform: translate(10px, 160px);\n  transform: translate(10px, 160px);\n}\n.tile-1-1 {\n  -webkit-transform: translate(160px, 160px);\n  -moz-transform: translate(160px, 160px);\n  -ms-transform: translate(160px, 160px);\n  transform: translate(160px, 160px);\n}\n.tile-1-2 {\n  -webkit-transform: translate(310px, 160px);\n  -moz-transform: translate(310px, 160px);\n  -ms-transform: translate(310px, 160px);\n  transform: translate(310px, 160px);\n}\n.tile-1-3 {\n  -webkit-transform: translate(460px, 160px);\n  -moz-transform: translate(460px, 160px);\n  -ms-transform: translate(460px, 160px);\n  transform: translate(460px, 160px);\n}\n.tile-2-0 {\n  -webkit-transform: translate(10px, 310px);\n  -moz-transform: translate(10px, 310px);\n  -ms-transform: translate(10px, 310px);\n  transform: translate(10px, 310px);\n}\n.tile-2-1 {\n  -webkit-transform: translate(160px, 310px);\n  -moz-transform: translate(160px, 310px);\n  -ms-transform: translate(160px, 310px);\n  transform: translate(160px, 310px);\n}\n.tile-2-2 {\n  -webkit-transform: translate(310px, 310px);\n  -moz-transform: translate(310px, 310px);\n  -ms-transform: translate(310px, 310px);\n  transform: translate(310px, 310px);\n}\n.tile-2-3 {\n  -webkit-transform: translate(460px, 310px);\n  -moz-transform: translate(460px, 310px);\n  -ms-transform: translate(460px, 310px);\n  transform: translate(460px, 310px);\n}\n.tile-3-0 {\n  -webkit-transform: translate(10px, 460px);\n  -moz-transform: translate(10px, 460px);\n  -ms-transform: translate(10px, 460px);\n  transform: translate(10px, 460px);\n}\n.tile-3-1 {\n  -webkit-transform: translate(160px, 460px);\n  -moz-transform: translate(160px, 460px);\n  -ms-transform: translate(160px, 460px);\n  transform: translate(160px, 460px);\n}\n.tile-3-2 {\n  -webkit-transform: translate(310px, 460px);\n  -moz-transform: translate(310px, 460px);\n  -ms-transform: translate(310px, 460px);\n  transform: translate(310px, 460px);\n}\n.tile-3-3 {\n  -webkit-transform: translate(460px, 460px);\n  -moz-transform: translate(460px, 460px);\n  -ms-transform: translate(460px, 460px);\n  transform: translate(460px, 460px);\n}\n.tile-inner {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  line-height: 140px;\n  font-size: 56px;\n  font-weight: bold;\n  font-family: \"Helvetica Neue\", Arial, sans-serif;\n}\n.tile-new>.tile-inner {\n  -webkit-animation: appear 0.2s ease 0.1s backwards;\n  -moz-animation: appear 0.2s ease 0.1s backwards;\n  -ms-animation: appear 0.2s ease 0.1s backwards;\n  animation: appear 0.2s ease 0.1s backwards;\n}\n.tile-merged>.tile-inner {\n  -webkit-animation: pop 0.2s ease 0.1s backwards;\n  -moz-animation: pop 0.2s ease 0.1s backwards;\n  -ms-animation: pop 0.2s ease 0.1s backwards;\n  animation: pop 0.2s ease 0.1s backwards;\n}\n.tile-value-2 {\n  color: #766e66;\n  background-color: #ede4db;\n}\n.tile-value-4 {\n  color: #766e66;\n  background-color: #ebe0cb;\n}\n.tile-value-8 {\n  color: #f9f6f2;\n  background-color: #e9b381;\n}\n.tile-value-16 {\n  color: #f9f6f2;\n  background-color: #e99c6c;\n}\n.tile-value-32 {\n  color: #f9f6f2;\n  background-color: #e88267;\n}\n.tile-value-64 {\n  color: #f9f6f2;\n  background-color: #e66747;\n}\n.tile-value-128 {\n  color: #f9f6f2;\n  background-color: #e9cf7f;\n}\n.tile-value-256 {\n  color: #f9f6f2;\n  background-color: #e9cc72;\n}\n.tile-value-512 {\n  color: #f9f6f2;\n  background-color: #edc850;\n}\n.tile-value-1024 {\n  color: #f9f6f2;\n  background-color: #edc53f;\n}\n.tile-value-2048 {\n  color: #f9f6f2;\n  background-color: #edc22e;\n}\n","gridWidth = 150px\ngridBorder = 10px\nrowLen = 4\ncolLen = 4\ntileFontSize = 56px\ncontainerWidth = gridWidth * colLen + gridBorder\n\n@import \"normalize.css\"\n@import \"utils.styl\"\n@import \"vendor.styl\"\n@import \"animations.styl\"\n\nbody\n  margin: 10px 0\n\n.game-container\n  width: containerWidth\n  margin: 0 auto\n\n.game-header\n  height:80px;\n  color: white\n  font:24px/30px Arial\n  clearboth()\n\n.game-title\n  float: left\n  margin:0\n  color: #776e65\n  font: bold 80px/80px Arial\n\n.game-score-box, .game-best-score-box\n  float:right\n  width: 100px\n  height: 60px\n  list-style:none\n  margin:10px 1px\n  padding:0\n  text-align:center\n  border-radius: 3px\n  background-color: #B9ADA1\n\n.new-game\n  float:right\n  width:130px\n  height:60px\n  margin:10px 1px\n  text-align:center\n  color: white\n  border-radius: 3px\n  background-color: #8f7a66\n  cursor: pointer\n\n\n.game-wrapper\n  position: relative\n.game-overlay\n  position: absolute\n  left:0\n  right:0\n  top:0\n  bottom:0\n  z-index: 2\n  background-color: rgba(255,255,255,0.4)\n  display: none\n  text-align:center\n.game-result\n  margin-top: 30%\n  font: bold 60px/60px Arial\n  &.lose\n    color:#766E66\n  &.win\n    color:#E7C24F\n.game-retry\n  width:230px\n  height:48px\n  font: 24px/48px Arial\n  color:#F9F6F2\n  background-color: #8C7A68\n  cursor: pointer\n\n.grids-table\n  background-color: #CDC0B4\n  border-collapse: collapse\n.grids-container tr\n  margin: 0\n  padding: 0\n.grids-container td\n  text-align: center\n  vertical-align: middle\n  width: gridWidth\n  height: gridWidth\n  box-sizing: border-box\n  border: gridBorder solid #BBADA0\n  margin: 0\n  padding: 0\n\n.tile\n  position: absolute\n  left:0\n  top:0\n  z-index: 1\n  width: gridWidth - gridBorder\n  height: gridWidth - gridBorder\n  transition: transform 0.1s ease-in-out\n// tile position: tile-{rowIndex}-{colIndex}\nfor ri in range(0, rowLen - 1)\n  for ci in range(0, colLen - 1)\n    .tile-{ri}-{ci}\n      transform: translate(gridBorder + ci * gridWidth, gridBorder + ri * gridWidth)\n.tile-inner\n  position: absolute\n  left:0\n  right:0\n  top:0\n  bottom:0\n  text-align center\n  line-height: gridWidth - gridBorder\n  font-size: tileFontSize\n  font-weight: bold\n  font-family: \"Helvetica Neue\", Arial, sans-serif\n// tile animation\n.tile-new>.tile-inner\n  animation: appear 0.2s ease 0.1s backwards\n.tile-merged>.tile-inner\n  animation: pop 0.2s ease 0.1s backwards\n\n// tile color\n.tile-value-2\n  color:#766E66\n  background-color: #EDE4DB\n.tile-value-4\n  color:#766E66\n  background-color: #EBE0CB\n.tile-value-8\n  color:#F9F6F2\n  background-color: #E9B381\n.tile-value-16\n  color:#F9F6F2\n  background-color: #E99C6C\n.tile-value-32\n  color:#F9F6F2\n  background-color: #E88267\n.tile-value-64\n  color:#F9F6F2\n  background-color: #E66747\n.tile-value-128\n  color:#F9F6F2\n  background-color: #E9CF7F\n.tile-value-256\n  color:#F9F6F2\n  background-color: #E9CC72\n.tile-value-512\n  color:#F9F6F2\n  background-color: #EDC850\n.tile-value-1024\n  color: #F9F6F2\n  background-color: #EDC53F\n.tile-value-2048\n  color: #F9F6F2\n  background-color: #EDC22E\n\n\n\n\n\n\n\n","clearboth()\n  &:after\n    content: ''\n    display: table\n    clear:both"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target) {
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js":
/*!********************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,